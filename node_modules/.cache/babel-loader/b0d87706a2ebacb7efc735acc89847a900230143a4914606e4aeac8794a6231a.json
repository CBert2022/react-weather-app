{"ast":null,"code":"function fetchData(cityName) {\n  const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n  axios.get(apiURL).then(res => {\n    let imagePath = \"\";\n\n    // Ermittlung von Tag oder Nacht basierend auf den API-Zeitdaten\n    function dayOrNight() {\n      let sunset = res.data.sys.sunset;\n      let currentTime = Math.floor(Date.now() / 1000);\n      setIsNight(currentTime >= sunset);\n    }\n    dayOrNight(); // Aufruf der dayOrNight-Funktion direkt nach dem Abrufen der Daten\n\n    if (isNight) {\n      document.querySelector(\".weather\").classList.add(\"night\");\n      if (res.data.weather[0].main === \"Clouds\") {\n        imagePath = Cloud;\n      } else if (res.data.weather[0].main === \"Clear\") {\n        imagePath = Stars;\n      } else if (res.data.weather[0].main === \"Rain\") {\n        imagePath = Rain;\n      } else if (res.data.weather[0].main === \"Drizzle\") {\n        imagePath = Rain;\n      } else if (res.data.weather[0].main === \"Mist\") {\n        imagePath = Fog;\n      } else if (res.data.weather[0].main === \"Snow\") {\n        imagePath = Snow;\n      } else if (res.data.weather[0].main === \"Thunderstorm\") {\n        imagePath = Storm;\n      } else {\n        imagePath = Cloudy;\n      }\n    } else {\n      document.querySelector(\".weather\").classList.remove(\"night\");\n      if (res.data.weather[0].main === \"Clouds\") {\n        imagePath = Cloud;\n      } else if (res.data.weather[0].main === \"Clear\") {\n        imagePath = Clear;\n      } else if (res.data.weather[0].main === \"Rain\") {\n        imagePath = Rain;\n      } else if (res.data.weather[0].main === \"Drizzle\") {\n        imagePath = Rain;\n      } else if (res.data.weather[0].main === \"Mist\") {\n        imagePath = Fog;\n      } else if (res.data.weather[0].main === \"Snow\") {\n        imagePath = Snow;\n      } else if (res.data.weather[0].main === \"Thunderstorm\") {\n        imagePath = Storm;\n      } else {\n        imagePath = Cloudy;\n      }\n    }\n    setData({\n      ...data,\n      celsius: res.data.main.temp,\n      name: res.data.name,\n      humidity: res.data.main.humidity,\n      speed: res.data.wind.speed,\n      image: imagePath,\n      feel: res.data.main.feels_like,\n      sunrise: res.data.sys.sunrise,\n      sunset: res.data.sys.sunset,\n      descripiton: res.data.weather[0].description\n    });\n    setError(\"\");\n  }).catch(err => {\n    if (err.response.status === 404) {\n      setError(\"Invalid City Name\");\n    } else {\n      setError(\"\");\n    }\n  });\n}","map":{"version":3,"names":["fetchData","cityName","apiURL","REACT_APP_API_KEY","axios","get","then","res","imagePath","dayOrNight","sunset","data","sys","currentTime","Math","floor","Date","now","setIsNight","isNight","document","querySelector","classList","add","weather","main","Cloud","Stars","Rain","Fog","Snow","Storm","Cloudy","remove","Clear","setData","celsius","temp","name","humidity","speed","wind","image","feel","feels_like","sunrise","descripiton","description","setError","catch","err","response","status"],"sources":["/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Home.js"],"sourcesContent":["function fetchData(cityName) {\n  const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n\n  axios\n    .get(apiURL)\n    .then((res) => {\n      let imagePath = \"\";\n\n      // Ermittlung von Tag oder Nacht basierend auf den API-Zeitdaten\n      function dayOrNight() {\n        let sunset = res.data.sys.sunset;\n        let currentTime = Math.floor(Date.now() / 1000);\n        setIsNight(currentTime >= sunset);\n      }\n\n      dayOrNight(); // Aufruf der dayOrNight-Funktion direkt nach dem Abrufen der Daten\n\n      if (isNight) {\n        document.querySelector(\".weather\").classList.add(\"night\");\n        if (res.data.weather[0].main === \"Clouds\") {\n          imagePath = Cloud;\n        } else if (res.data.weather[0].main === \"Clear\") {\n          imagePath = Stars;\n        } else if (res.data.weather[0].main === \"Rain\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Drizzle\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Mist\") {\n          imagePath = Fog;\n        } else if (res.data.weather[0].main === \"Snow\") {\n          imagePath = Snow;\n        } else if (res.data.weather[0].main === \"Thunderstorm\") {\n          imagePath = Storm;\n        } else {\n          imagePath = Cloudy;\n        }\n      } else {\n        document.querySelector(\".weather\").classList.remove(\"night\");\n        if (res.data.weather[0].main === \"Clouds\") {\n          imagePath = Cloud;\n        } else if (res.data.weather[0].main === \"Clear\") {\n          imagePath = Clear;\n        } else if (res.data.weather[0].main === \"Rain\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Drizzle\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Mist\") {\n          imagePath = Fog;\n        } else if (res.data.weather[0].main === \"Snow\") {\n          imagePath = Snow;\n        } else if (res.data.weather[0].main === \"Thunderstorm\") {\n          imagePath = Storm;\n        } else {\n          imagePath = Cloudy;\n        }\n      }\n\n      setData({\n        ...data,\n        celsius: res.data.main.temp,\n        name: res.data.name,\n        humidity: res.data.main.humidity,\n        speed: res.data.wind.speed,\n        image: imagePath,\n        feel: res.data.main.feels_like,\n        sunrise: res.data.sys.sunrise,\n        sunset: res.data.sys.sunset,\n        descripiton: res.data.weather[0].description,\n      });\n      setError(\"\");\n    })\n    .catch((err) => {\n      if (err.response.status === 404) {\n        setError(\"Invalid City Name\");\n      } else {\n        setError(\"\");\n      }\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}