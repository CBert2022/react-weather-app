{"ast":null,"code":"var _jsxFileName = \"/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Details.js\",\n  _s = $RefreshSig$();\n// Details.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cloud from \"./assets/cloud.png\";\nimport Clear from \"./assets/sun.png\";\nimport Rain from \"./assets/rainy-day.png\";\nimport Storm from \"./assets/storm.png\";\nimport Fog from \"./assets/fog.png\";\nimport Snow from \"./assets/snowy.png\";\nimport Cloudy from \"./assets/cloudy.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Details({\n  cityName,\n  minTemp,\n  maxTemp,\n  image\n}) {\n  _s();\n  // Zugriff auf die API-Schlüssel aus den Umgebungsvariablen\n  const {\n    REACT_APP_API_KEY\n  } = process.env;\n\n  // Ermitteln der Wochentage\n  let daysOfWeek = [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"];\n\n  // Index des heutigen Wochentags\n  let today = new Date().getDay();\n\n  // Objekt zum Sammeln der Mindest- und Maximaltemperaturen für jeden Tag\n  let tempsByDay = {};\n  const [day2_minTemp, setDay2_minTemp] = useState(\"\");\n  const [day3_minTemp, setDay3_minTemp] = useState(\"\");\n  const [day4_minTemp, setDay4_minTemp] = useState(\"\");\n  const [day5_minTemp, setDay5_minTemp] = useState(\"\");\n  const [day6_minTemp, setDay6_minTemp] = useState(\"\");\n  const [day2_maxTemp, setDay2_maxTemp] = useState(\"\");\n  const [day3_maxTemp, setDay3_maxTemp] = useState(\"\");\n  const [day4_maxTemp, setDay4_maxTemp] = useState(\"\");\n  const [day5_maxTemp, setDay5_maxTemp] = useState(\"\");\n  const [day6_maxTemp, setDay6_maxTemp] = useState(\"\");\n  const [day2_name, setDay2Name] = useState(\"\");\n  const [day3_name, setDay3Name] = useState(\"\");\n  const [day4_name, setDay4Name] = useState(\"\");\n  const [day5_name, setDay5Name] = useState(\"\");\n  const [day6_name, setDay6Name] = useState(\"\");\n  const [day2_image, setDay2Image] = useState(\"\");\n  const [day3_image, setDay3Image] = useState(\"\");\n  const [day4_image, setDay4Image] = useState(\"\");\n  const [day5_image, setDay5Image] = useState(\"\");\n  const [day6_image, setDay6Image] = useState(\"\");\n\n  //console.log(cityName);\n  const apiURL = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n  axios.get(apiURL).then(res => {\n    console.log(res.data.list);\n    console.log(res.data.list[0].weather[0].main);\n\n    // let apiDate = new Date(res.data.list[0].dt_txt).getDay(); // Index des Wochentags der API\n\n    for (let i = 0; i < res.data.list.length; i++) {\n      let apiDate = new Date(res.data.list[i].dt_txt).getDay();\n      let minTempOfDay = res.data.list[i].main.temp_min;\n      let maxTempOfDay = res.data.list[i].main.temp_max;\n      let iconsOfDay = res.data.list[i].weather[0].main;\n\n      // Vergleiche die Wochentage\n      if (apiDate !== today) {\n        let dayOfWeek = daysOfWeek[apiDate];\n        // Überprüfe, ob bereits ein Eintrag für diesen Wochentag im Objekt existiert\n        if (!tempsByDay[dayOfWeek]) {\n          tempsByDay[dayOfWeek] = {\n            min: [],\n            max: [],\n            icon: []\n          };\n        }\n        // Füge die Mindesttemperatur zum entsprechenden Tag hinzu\n        tempsByDay[dayOfWeek].min.push(minTempOfDay);\n        tempsByDay[dayOfWeek].max.push(maxTempOfDay);\n        tempsByDay[dayOfWeek].icon.push(iconsOfDay);\n      }\n    }\n    console.log(\"Mindesttemperaturen für jeden Wochentag:\", tempsByDay);\n\n    // Ermitteln der kleinsten Mindesttemp und der größten Maximaltemp\n    // Iteriere über jeden Wochentag im tempsByDay-Objekt\n    for (let i = 0; i < daysOfWeek.length; i++) {\n      let day = daysOfWeek[i];\n\n      // Wenn der Tag nach dem aktuellen Tag liegt\n      if (i > today) {\n        // Finde die kleinste und größte Temperatur für den aktuellen Tag\n        let minTemp = tempsByDay[day].min[0];\n        let maxTemp = tempsByDay[day].max[0];\n        // let iconOfDay = tempsByDay[day].icon[0];\n\n        for (let temp of tempsByDay[day].min) {\n          if (temp < minTemp) {\n            minTemp = temp;\n          }\n        }\n        for (let temp of tempsByDay[day].max) {\n          if (temp > maxTemp) {\n            maxTemp = temp;\n          }\n        }\n        for (let icon of tempsByDay[day].icon) {\n          if (res.data.list[i].dt_txt.slice(-8) === \"12:00:00\") {\n            icon = res.data.list[i].weather[0].main;\n            console.log(icon);\n          }\n          // console.log(iconsOfDay);\n        }\n\n        //console.log(tempsByDay);\n\n        // Icons extrahieren\n        // Zugriff auf die Schlüssel des Objekts\n        // Iteration über die ersten fünf Einträge\n\n        const keys = Object.keys(tempsByDay);\n        switch (i) {\n          case today + 1:\n            setDay2Name(day);\n            setDay2_minTemp(minTemp);\n            setDay2_maxTemp(maxTemp);\n            setDay2Image(getWeatherIcon(tempsByDay[day].icon));\n            break;\n          case today + 2:\n            setDay3Name(day);\n            setDay3_minTemp(minTemp);\n            setDay3_maxTemp(maxTemp);\n            setDay3Image(getWeatherIcon(tempsByDay[day].icon));\n            break;\n          case today + 3:\n            setDay4Name(day);\n            setDay4_minTemp(minTemp);\n            setDay4_maxTemp(maxTemp);\n            setDay4Image(getWeatherIcon(tempsByDay[day].icon));\n            break;\n          case today + 4:\n            setDay5Name(day);\n            setDay5_minTemp(minTemp);\n            setDay5_maxTemp(maxTemp);\n            setDay5Image(getWeatherIcon(tempsByDay[day].icon));\n            break;\n          case today + 5:\n            setDay6Name(day);\n            setDay6_minTemp(minTemp);\n            setDay6_maxTemp(maxTemp);\n            setDay6Image(getWeatherIcon(tempsByDay[day].icon));\n            break;\n          default:\n            break;\n        }\n      }\n    }\n  }).catch(err => {\n    console.error(\"Fehler beim Abrufen der Wetterdaten:\", err);\n  });\n  const getWeatherIcon = weather => {\n    switch (weather) {\n      case \"Clouds\":\n        return Cloud;\n      case \"Clear\":\n        return Clear;\n      case \"Rain\":\n        return Rain;\n      case \"Storm\":\n        return Storm;\n      case \"Fog\":\n        return Fog;\n      case \"Snow\":\n        return Snow;\n      default:\n        return Cloudy;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_temp_infos\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"5-Tage-Vorhersage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container_forecast\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"forecast_day\",\n            children: \"Heute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"forecast_icon\",\n            src: image,\n            alt: \"wetter icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"minTemp\",\n            children: [Math.round(minTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(maxTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"devider_forcast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: day2_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"forecast_icon\",\n            src: day2_image,\n            alt: \"wetter icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"minTemp\",\n            children: [Math.round(day2_minTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(day2_maxTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"devider_forcast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: day3_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"forecast_icon\",\n            src: day3_image,\n            alt: \"wetter icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"minTemp\",\n            children: [Math.round(day3_minTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(day3_maxTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"devider_forcast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: day4_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"forecast_icon\",\n            src: day4_image,\n            alt: \"wetter icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"minTemp\",\n            children: [Math.round(day4_minTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(day4_maxTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"devider_forcast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: day5_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"forecast_icon\",\n            src: day5_image,\n            alt: \"wetter icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"minTemp\",\n            children: [Math.round(day5_minTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(day5_maxTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"devider_forcast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: day6_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"forecast_icon\",\n            src: day6_image,\n            alt: \"wetter icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"minTemp\",\n            children: [Math.round(day6_minTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(day6_maxTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tab\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Details, \"8A8EHzo7xJ113O6V8mxy8YkyKFE=\");\n_c = Details;\nexport default Details;\nvar _c;\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"names":["React","useState","useEffect","axios","Cloud","Clear","Rain","Storm","Fog","Snow","Cloudy","jsxDEV","_jsxDEV","Fragment","_Fragment","Details","cityName","minTemp","maxTemp","image","_s","REACT_APP_API_KEY","process","env","daysOfWeek","today","Date","getDay","tempsByDay","day2_minTemp","setDay2_minTemp","day3_minTemp","setDay3_minTemp","day4_minTemp","setDay4_minTemp","day5_minTemp","setDay5_minTemp","day6_minTemp","setDay6_minTemp","day2_maxTemp","setDay2_maxTemp","day3_maxTemp","setDay3_maxTemp","day4_maxTemp","setDay4_maxTemp","day5_maxTemp","setDay5_maxTemp","day6_maxTemp","setDay6_maxTemp","day2_name","setDay2Name","day3_name","setDay3Name","day4_name","setDay4Name","day5_name","setDay5Name","day6_name","setDay6Name","day2_image","setDay2Image","day3_image","setDay3Image","day4_image","setDay4Image","day5_image","setDay5Image","day6_image","setDay6Image","apiURL","get","then","res","console","log","data","list","weather","main","i","length","apiDate","dt_txt","minTempOfDay","temp_min","maxTempOfDay","temp_max","iconsOfDay","dayOfWeek","min","max","icon","push","day","temp","slice","keys","Object","getWeatherIcon","catch","err","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","Math","round","id","_c","$RefreshReg$"],"sources":["/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Details.js"],"sourcesContent":["// Details.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Cloud from \"./assets/cloud.png\";\nimport Clear from \"./assets/sun.png\";\nimport Rain from \"./assets/rainy-day.png\";\nimport Storm from \"./assets/storm.png\";\nimport Fog from \"./assets/fog.png\";\nimport Snow from \"./assets/snowy.png\";\nimport Cloudy from \"./assets/cloudy.png\";\n\nfunction Details({ cityName, minTemp, maxTemp, image }) {\n  // Zugriff auf die API-Schlüssel aus den Umgebungsvariablen\n  const { REACT_APP_API_KEY } = process.env;\n\n  // Ermitteln der Wochentage\n  let daysOfWeek = [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"];\n\n  // Index des heutigen Wochentags\n  let today = new Date().getDay();\n\n  // Objekt zum Sammeln der Mindest- und Maximaltemperaturen für jeden Tag\n  let tempsByDay = {};\n\n  const [day2_minTemp, setDay2_minTemp] = useState(\"\");\n  const [day3_minTemp, setDay3_minTemp] = useState(\"\");\n  const [day4_minTemp, setDay4_minTemp] = useState(\"\");\n  const [day5_minTemp, setDay5_minTemp] = useState(\"\");\n  const [day6_minTemp, setDay6_minTemp] = useState(\"\");\n\n  const [day2_maxTemp, setDay2_maxTemp] = useState(\"\");\n  const [day3_maxTemp, setDay3_maxTemp] = useState(\"\");\n  const [day4_maxTemp, setDay4_maxTemp] = useState(\"\");\n  const [day5_maxTemp, setDay5_maxTemp] = useState(\"\");\n  const [day6_maxTemp, setDay6_maxTemp] = useState(\"\");\n\n  const [day2_name, setDay2Name] = useState(\"\");\n  const [day3_name, setDay3Name] = useState(\"\");\n  const [day4_name, setDay4Name] = useState(\"\");\n  const [day5_name, setDay5Name] = useState(\"\");\n  const [day6_name, setDay6Name] = useState(\"\");\n\n  const [day2_image, setDay2Image] = useState(\"\");\n  const [day3_image, setDay3Image] = useState(\"\");\n  const [day4_image, setDay4Image] = useState(\"\");\n  const [day5_image, setDay5Image] = useState(\"\");\n  const [day6_image, setDay6Image] = useState(\"\");\n\n  //console.log(cityName);\n  const apiURL = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n\n  axios\n    .get(apiURL)\n    .then((res) => {\n      console.log(res.data.list);\n      console.log(res.data.list[0].weather[0].main);\n\n      // let apiDate = new Date(res.data.list[0].dt_txt).getDay(); // Index des Wochentags der API\n\n      for (let i = 0; i < res.data.list.length; i++) {\n        let apiDate = new Date(res.data.list[i].dt_txt).getDay();\n        let minTempOfDay = res.data.list[i].main.temp_min;\n        let maxTempOfDay = res.data.list[i].main.temp_max;\n        let iconsOfDay = res.data.list[i].weather[0].main;\n\n        // Vergleiche die Wochentage\n        if (apiDate !== today) {\n          let dayOfWeek = daysOfWeek[apiDate];\n          // Überprüfe, ob bereits ein Eintrag für diesen Wochentag im Objekt existiert\n          if (!tempsByDay[dayOfWeek]) {\n            tempsByDay[dayOfWeek] = { min: [], max: [], icon: [] };\n          }\n          // Füge die Mindesttemperatur zum entsprechenden Tag hinzu\n          tempsByDay[dayOfWeek].min.push(minTempOfDay);\n          tempsByDay[dayOfWeek].max.push(maxTempOfDay);\n          tempsByDay[dayOfWeek].icon.push(iconsOfDay);\n        }\n      }\n      console.log(\"Mindesttemperaturen für jeden Wochentag:\", tempsByDay);\n\n      // Ermitteln der kleinsten Mindesttemp und der größten Maximaltemp\n      // Iteriere über jeden Wochentag im tempsByDay-Objekt\n      for (let i = 0; i < daysOfWeek.length; i++) {\n        let day = daysOfWeek[i];\n\n        // Wenn der Tag nach dem aktuellen Tag liegt\n        if (i > today) {\n          // Finde die kleinste und größte Temperatur für den aktuellen Tag\n          let minTemp = tempsByDay[day].min[0];\n          let maxTemp = tempsByDay[day].max[0];\n          // let iconOfDay = tempsByDay[day].icon[0];\n\n          for (let temp of tempsByDay[day].min) {\n            if (temp < minTemp) {\n              minTemp = temp;\n            }\n          }\n\n          for (let temp of tempsByDay[day].max) {\n            if (temp > maxTemp) {\n              maxTemp = temp;\n            }\n          }\n\n          for (let icon of tempsByDay[day].icon) {\n            if (res.data.list[i].dt_txt.slice(-8) === \"12:00:00\") {\n              icon = res.data.list[i].weather[0].main;\n              console.log(icon);\n            }\n            // console.log(iconsOfDay);\n          }\n\n          //console.log(tempsByDay);\n\n          // Icons extrahieren\n          // Zugriff auf die Schlüssel des Objekts\n          // Iteration über die ersten fünf Einträge\n\n          const keys = Object.keys(tempsByDay);\n\n          switch (i) {\n            case today + 1:\n              setDay2Name(day);\n              setDay2_minTemp(minTemp);\n              setDay2_maxTemp(maxTemp);\n              setDay2Image(getWeatherIcon(tempsByDay[day].icon));\n              break;\n            case today + 2:\n              setDay3Name(day);\n              setDay3_minTemp(minTemp);\n              setDay3_maxTemp(maxTemp);\n              setDay3Image(getWeatherIcon(tempsByDay[day].icon));\n              break;\n            case today + 3:\n              setDay4Name(day);\n              setDay4_minTemp(minTemp);\n              setDay4_maxTemp(maxTemp);\n              setDay4Image(getWeatherIcon(tempsByDay[day].icon));\n              break;\n            case today + 4:\n              setDay5Name(day);\n              setDay5_minTemp(minTemp);\n              setDay5_maxTemp(maxTemp);\n              setDay5Image(getWeatherIcon(tempsByDay[day].icon));\n              break;\n            case today + 5:\n              setDay6Name(day);\n              setDay6_minTemp(minTemp);\n              setDay6_maxTemp(maxTemp);\n              setDay6Image(getWeatherIcon(tempsByDay[day].icon));\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    })\n    .catch((err) => {\n      console.error(\"Fehler beim Abrufen der Wetterdaten:\", err);\n    });\n\n  const getWeatherIcon = (weather) => {\n    switch (weather) {\n      case \"Clouds\":\n        return Cloud;\n      case \"Clear\":\n        return Clear;\n      case \"Rain\":\n        return Rain;\n      case \"Storm\":\n        return Storm;\n      case \"Fog\":\n        return Fog;\n      case \"Snow\":\n        return Snow;\n      default:\n        return Cloudy;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container_temp_infos\">\n        <h3>5-Tage-Vorhersage</h3>\n        <div className=\"container_forecast\">\n          <div className=\"forecast_row\">\n            <p className=\"forecast_day\">Heute</p>\n            <img className=\"forecast_icon\" src={image} alt=\"wetter icon\" />\n            <p className=\"minTemp\">{Math.round(minTemp)}°C</p>\n            <p>{Math.round(maxTemp)}°C</p>\n          </div>\n          <div className=\"devider_forcast\"></div>\n          <div className=\"forecast_row\">\n            <p>{day2_name}</p>\n            <img className=\"forecast_icon\" src={day2_image} alt=\"wetter icon\" />\n            <p className=\"minTemp\">{Math.round(day2_minTemp)}°C</p>\n            <p>{Math.round(day2_maxTemp)}°C</p>\n          </div>\n          <div className=\"devider_forcast\"></div>\n          <div className=\"forecast_row\">\n            <p>{day3_name}</p>\n            <img className=\"forecast_icon\" src={day3_image} alt=\"wetter icon\" />\n            <p className=\"minTemp\">{Math.round(day3_minTemp)}°C</p>\n            <p>{Math.round(day3_maxTemp)}°C</p>\n          </div>\n          <div className=\"devider_forcast\"></div>\n          <div className=\"forecast_row\">\n            <p>{day4_name}</p>\n            <img className=\"forecast_icon\" src={day4_image} alt=\"wetter icon\" />\n            <p className=\"minTemp\">{Math.round(day4_minTemp)}°C</p>\n            <p>{Math.round(day4_maxTemp)}°C</p>\n          </div>\n          <div className=\"devider_forcast\"></div>\n          <div className=\"forecast_row\">\n            <p>{day5_name}</p>\n            <img className=\"forecast_icon\" src={day5_image} alt=\"wetter icon\" />\n            <p className=\"minTemp\">{Math.round(day5_minTemp)}°C</p>\n            <p>{Math.round(day5_maxTemp)}°C</p>\n          </div>\n          <div className=\"devider_forcast\"></div>\n          <div className=\"forecast_row\">\n            <p>{day6_name}</p>\n            <img className=\"forecast_icon\" src={day6_image} alt=\"wetter icon\" />\n            <p className=\"minTemp\">{Math.round(day6_minTemp)}°C</p>\n            <p>{Math.round(day6_maxTemp)}°C</p>\n          </div>\n        </div>\n        <div id=\"tab\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default Details;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}