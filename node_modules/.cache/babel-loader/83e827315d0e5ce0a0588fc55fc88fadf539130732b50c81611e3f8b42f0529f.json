{"ast":null,"code":"var _jsxFileName = \"/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Home.js\",\n  _s = $RefreshSig$();\nimport \"../style.css\";\nimport Cloud from \"./assets/cloud.png\";\nimport Clear from \"./assets/sun.png\";\nimport Rain from \"./assets/rainy-day.png\";\nimport Storm from \"./assets/storm.png\";\nimport Fog from \"./assets/fog.png\";\nimport Snow from \"./assets/snowy.png\";\nimport Humidity from \"./assets/weather.png\";\nimport Wind from \"./assets/wind.png\";\nimport Stars from \"./assets/moon.png\";\nimport Cloudy from \"./assets/cloudy.png\";\nimport Feel from \"./assets/thermometer.png\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Details from \"./Details\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const {\n    REACT_APP_API_KEY\n  } = process.env;\n\n  // Zustände für die Wetterdate\n  const [data, setData] = useState({\n    celsius: 10,\n    name: \"Suche Stadt...\",\n    humidity: 10,\n    speed: 2,\n    image: Cloud,\n    feel: 10,\n    sunrise: 0,\n    sunset: 0,\n    description: \"\",\n    min_temp: \"\",\n    max_temp: \"\"\n  });\n\n  // Zustand der eigegebenen Stadt\n  const [name, setName] = useState(\"\");\n  // Fehlermeldungen\n  const [error, setError] = useState(\"\");\n  // Zustand, um zu überprüfen, ob es Nacht ist\n  const [isNight, setIsNight] = useState(false);\n  // Zustand, um zu überprüfen, ob bereits eine Stadt abgerufen wurde\n  const [cityFetched, setCityFetched] = useState(false);\n  // Neuer Zustand für die Stadt\n  const [cityName, setCityName] = useState(\"\");\n\n  // Effekt, um die Geolokalisierung auszuführen, wenn keine Stadt abgerufen wurde\n  useEffect(() => {\n    if (!cityFetched && name === \"\") {\n      navigator.geolocation.getCurrentPosition(zeigePosition);\n    }\n  });\n\n  // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n  useEffect(() => {\n    if (cityFetched) {\n      fetchData(data.name); //  API Aufruf für die Stadt, die bereits abgerufen wurde\n    }\n  }, [isNight]);\n\n  // Funktion zur Verarbeitung der Geolokalisierungsdaten\n  function zeigePosition(position) {\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n    const apiURL = `https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&appid=${REACT_APP_API_KEY}`;\n    axios.get(apiURL).then(res => {\n      const cityName = res.data[0].name;\n      setCityName(cityName);\n      fetchData(cityName); // aus geolocation\n      setCityFetched(true);\n    }).catch(err => {\n      if (err.response.status === 404) {\n        setError(\"Invalid City Name\");\n      } else {\n        setError(\"\");\n      }\n    });\n  }\n\n  // Funktion zum Abrufen von Wetterdaten basierend auf dem Stadtnamen\n  function fetchData(cityName) {\n    const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n    axios.get(apiURL).then(res => {\n      //console.log(res.data);\n      let imagePath = \"\";\n\n      // Bestimmung von Tag oder Nacht\n      const sunriseTime = res.data.sys.sunrise;\n      const sunsetTime = res.data.sys.sunset;\n      let currentTime = Math.floor(Date.now() / 1000);\n      const night = currentTime >= sunsetTime || currentTime < sunriseTime;\n      setIsNight(night);\n      if (night) {\n        document.querySelector(\".weather\").classList.add(\"night\");\n        if (res.data.weather[0].main === \"Clouds\") {\n          imagePath = Cloud;\n        } else if (res.data.weather[0].main === \"Clear\") {\n          imagePath = Stars;\n        } else if (res.data.weather[0].main === \"Rain\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Drizzle\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Mist\") {\n          imagePath = Fog;\n        } else if (res.data.weather[0].main === \"Snow\") {\n          imagePath = Snow;\n        } else if (res.data.weather[0].main === \"Thunderstorm\") {\n          imagePath = Storm;\n        } else {\n          imagePath = Cloudy;\n        }\n      } else {\n        document.querySelector(\".weather\").classList.remove(\"night\");\n        if (res.data.weather[0].main === \"Clouds\") {\n          imagePath = Cloud;\n        } else if (res.data.weather[0].main === \"Clear\") {\n          imagePath = Clear;\n        } else if (res.data.weather[0].main === \"Rain\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Drizzle\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Mist\") {\n          imagePath = Fog;\n        } else if (res.data.weather[0].main === \"Snow\") {\n          imagePath = Snow;\n        } else if (res.data.weather[0].main === \"Thunderstorm\") {\n          imagePath = Storm;\n        } else {\n          imagePath = Cloudy;\n        }\n      }\n      setData({\n        ...data,\n        celsius: res.data.main.temp,\n        name: res.data.name,\n        humidity: res.data.main.humidity,\n        speed: res.data.wind.speed,\n        image: imagePath,\n        feel: res.data.main.feels_like,\n        sunrise: res.data.sys.sunrise,\n        sunset: res.data.sys.sunset,\n        description: res.data.weather[0].description,\n        min_temp: res.data.main.temp_min,\n        max_temp: res.data.main.temp_max\n      });\n      setError(\"\");\n      setCityFetched(true); // Setze cityFetched auf true, da die Stadt erfolgreich abgerufen wurde\n    }).catch(err => {\n      if (err.response.status === 404) {\n        setError(\"Invalid City Name\");\n      } else {\n        setError(\"\");\n      }\n    });\n  }\n  const handleClick = () => {\n    setCityFetched(false); // Setzen des Zustands, um sicherzustellen, dass die Geolokalisierung erneut durchgeführt wird\n    if (name !== \"\") {\n      fetchData(name);\n      setCityName(name);\n      //console.log(\"name, manuell:\" + name);\n    }\n  };\n  if (cityName) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current_lo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"night_shift\",\n          className: \"weather\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"input\",\n              type: \"text\",\n              placeholder: \"Enter City Name\",\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleClick,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-magnifying-glass\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"winfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"main_img\",\n              src: data.image,\n              alt: \"cloud\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [Math.round(data.celsius), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"description\",\n              children: data.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container_temp_infos\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: Feel,\n                      alt: \"humidity\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [Math.round(data.feel), \"\\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Gef\\xFChlt wie\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"temps\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"minTemp\",\n                      children: [\"min \", Math.round(data.min_temp), \"\\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"max \", Math.round(data.max_temp), \"\\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: Humidity,\n                      alt: \"feels like\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [Math.round(data.humidity), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Luftfeuchtigkeit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: Wind,\n                      alt: \"wind\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [Math.round(data.speed), \"km/h\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Wind\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Details, {\n              cityName: cityName\n            }, cityName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"copyright-mobil\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://www.flaticon.com/free-icons/weather\",\n              title: \"weather icons\",\n              children: \"Weather icons created by iconixar - Flaticon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return;\n  }\n}\n_s(Home, \"UqPuc0Dpqbq+O64x5OxZcpmshFY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Cloud","Clear","Rain","Storm","Fog","Snow","Humidity","Wind","Stars","Cloudy","Feel","React","useState","useEffect","axios","Details","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","REACT_APP_API_KEY","process","env","data","setData","celsius","name","humidity","speed","image","feel","sunrise","sunset","description","min_temp","max_temp","setName","error","setError","isNight","setIsNight","cityFetched","setCityFetched","cityName","setCityName","navigator","geolocation","getCurrentPosition","zeigePosition","fetchData","position","lat","coords","latitude","lon","longitude","apiURL","get","then","res","catch","err","response","status","imagePath","sunriseTime","sys","sunsetTime","currentTime","Math","floor","Date","now","night","document","querySelector","classList","add","weather","main","remove","temp","wind","feels_like","temp_min","temp_max","handleClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","onChange","e","target","value","onClick","src","alt","round","href","title","_c","$RefreshReg$"],"sources":["/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Home.js"],"sourcesContent":["import \"../style.css\";\nimport Cloud from \"./assets/cloud.png\";\nimport Clear from \"./assets/sun.png\";\nimport Rain from \"./assets/rainy-day.png\";\nimport Storm from \"./assets/storm.png\";\nimport Fog from \"./assets/fog.png\";\nimport Snow from \"./assets/snowy.png\";\nimport Humidity from \"./assets/weather.png\";\nimport Wind from \"./assets/wind.png\";\nimport Stars from \"./assets/moon.png\";\nimport Cloudy from \"./assets/cloudy.png\";\nimport Feel from \"./assets/thermometer.png\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Details from \"./Details\";\n\nfunction Home() {\n  const { REACT_APP_API_KEY } = process.env;\n\n  // Zustände für die Wetterdate\n  const [data, setData] = useState({\n    celsius: 10,\n    name: \"Suche Stadt...\",\n    humidity: 10,\n    speed: 2,\n    image: Cloud,\n    feel: 10,\n    sunrise: 0,\n    sunset: 0,\n    description: \"\",\n    min_temp: \"\",\n    max_temp: \"\",\n  });\n\n  // Zustand der eigegebenen Stadt\n  const [name, setName] = useState(\"\");\n  // Fehlermeldungen\n  const [error, setError] = useState(\"\");\n  // Zustand, um zu überprüfen, ob es Nacht ist\n  const [isNight, setIsNight] = useState(false);\n  // Zustand, um zu überprüfen, ob bereits eine Stadt abgerufen wurde\n  const [cityFetched, setCityFetched] = useState(false);\n  // Neuer Zustand für die Stadt\n  const [cityName, setCityName] = useState(\"\");\n\n  // Effekt, um die Geolokalisierung auszuführen, wenn keine Stadt abgerufen wurde\n  useEffect(() => {\n    if (!cityFetched && name === \"\") {\n      navigator.geolocation.getCurrentPosition(zeigePosition);\n    }\n  });\n\n  // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n  useEffect(() => {\n    if (cityFetched) {\n      fetchData(data.name); //  API Aufruf für die Stadt, die bereits abgerufen wurde\n    }\n  }, [isNight]);\n\n  // Funktion zur Verarbeitung der Geolokalisierungsdaten\n  function zeigePosition(position) {\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n\n    const apiURL = `https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&appid=${REACT_APP_API_KEY}`;\n\n    axios\n      .get(apiURL)\n      .then((res) => {\n        const cityName = res.data[0].name;\n        setCityName(cityName);\n        fetchData(cityName); // aus geolocation\n        setCityFetched(true);\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          setError(\"Invalid City Name\");\n        } else {\n          setError(\"\");\n        }\n      });\n  }\n\n  // Funktion zum Abrufen von Wetterdaten basierend auf dem Stadtnamen\n  function fetchData(cityName) {\n    const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n\n    axios\n      .get(apiURL)\n      .then((res) => {\n        //console.log(res.data);\n        let imagePath = \"\";\n\n        // Bestimmung von Tag oder Nacht\n        const sunriseTime = res.data.sys.sunrise;\n        const sunsetTime = res.data.sys.sunset;\n        let currentTime = Math.floor(Date.now() / 1000);\n        const night = currentTime >= sunsetTime || currentTime < sunriseTime;\n        setIsNight(night);\n\n        if (night) {\n          document.querySelector(\".weather\").classList.add(\"night\");\n          if (res.data.weather[0].main === \"Clouds\") {\n            imagePath = Cloud;\n          } else if (res.data.weather[0].main === \"Clear\") {\n            imagePath = Stars;\n          } else if (res.data.weather[0].main === \"Rain\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Drizzle\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Mist\") {\n            imagePath = Fog;\n          } else if (res.data.weather[0].main === \"Snow\") {\n            imagePath = Snow;\n          } else if (res.data.weather[0].main === \"Thunderstorm\") {\n            imagePath = Storm;\n          } else {\n            imagePath = Cloudy;\n          }\n        } else {\n          document.querySelector(\".weather\").classList.remove(\"night\");\n          if (res.data.weather[0].main === \"Clouds\") {\n            imagePath = Cloud;\n          } else if (res.data.weather[0].main === \"Clear\") {\n            imagePath = Clear;\n          } else if (res.data.weather[0].main === \"Rain\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Drizzle\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Mist\") {\n            imagePath = Fog;\n          } else if (res.data.weather[0].main === \"Snow\") {\n            imagePath = Snow;\n          } else if (res.data.weather[0].main === \"Thunderstorm\") {\n            imagePath = Storm;\n          } else {\n            imagePath = Cloudy;\n          }\n        }\n\n        setData({\n          ...data,\n          celsius: res.data.main.temp,\n          name: res.data.name,\n          humidity: res.data.main.humidity,\n          speed: res.data.wind.speed,\n          image: imagePath,\n          feel: res.data.main.feels_like,\n          sunrise: res.data.sys.sunrise,\n          sunset: res.data.sys.sunset,\n          description: res.data.weather[0].description,\n          min_temp: res.data.main.temp_min,\n          max_temp: res.data.main.temp_max,\n        });\n        setError(\"\");\n        setCityFetched(true); // Setze cityFetched auf true, da die Stadt erfolgreich abgerufen wurde\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          setError(\"Invalid City Name\");\n        } else {\n          setError(\"\");\n        }\n      });\n  }\n\n  const handleClick = () => {\n    setCityFetched(false); // Setzen des Zustands, um sicherzustellen, dass die Geolokalisierung erneut durchgeführt wird\n    if (name !== \"\") {\n      fetchData(name);\n      setCityName(name);\n      //console.log(\"name, manuell:\" + name);\n    }\n  };\n\n  if (cityName) {\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"current_lo\"></div>\n          <div id=\"night_shift\" className=\"weather\">\n            <div className=\"search\">\n              <input\n                id=\"input\"\n                type=\"text\"\n                placeholder=\"Enter City Name\"\n                onChange={(e) => setName(e.target.value)}\n              />\n              <button onClick={handleClick}>\n                <i className=\"fa-solid fa-magnifying-glass\"></i>\n              </button>\n            </div>\n            <div className=\"winfo\">\n              <div className=\"error\">\n                <p>{error}</p>\n              </div>\n              <img className=\"main_img\" src={data.image} alt=\"cloud\" />\n              <h1>{Math.round(data.celsius)}°C</h1>\n              <h2>{data.name}</h2>\n              <p className=\"description\">{data.description}</p>\n              <div className=\"container_temp_infos\">\n                <div className=\"details\">\n                  <div className=\"col\">\n                    <div>\n                      <img src={Feel} alt=\"humidity\" />\n                    </div>\n                    <div>\n                      <p>{Math.round(data.feel)}°C</p>\n                      <p>Gefühlt wie</p>\n                    </div>\n                  </div>\n                  <div className=\"col\">\n                    <div className=\"temps\">\n                      <p className=\"minTemp\">\n                        min {Math.round(data.min_temp)}°C\n                      </p>{\" \"}\n                      <p>max {Math.round(data.max_temp)}°C</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"details\">\n                  <div className=\"col\">\n                    <div>\n                      <img src={Humidity} alt=\"feels like\" />\n                    </div>\n                    <div>\n                      <p>{Math.round(data.humidity)}%</p>\n                      <p>Luftfeuchtigkeit</p>\n                    </div>\n                  </div>\n                  <div className=\"col\">\n                    <div>\n                      <img src={Wind} alt=\"wind\" />\n                    </div>\n                    <div>\n                      <p>{Math.round(data.speed)}km/h</p>\n                      <p>Wind</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <Details key={cityName} cityName={cityName} />\n            </div>\n            <div className=\"copyright-mobil\">\n              <a\n                href=\"https://www.flaticon.com/free-icons/weather\"\n                title=\"weather icons\"\n              >\n                Weather icons created by iconixar - Flaticon\n              </a>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  } else {\n    return;\n  }\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}