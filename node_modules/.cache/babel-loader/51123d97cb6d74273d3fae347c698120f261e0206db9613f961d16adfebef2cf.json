{"ast":null,"code":"import\"../style.css\";import Cloud from\"./assets/cloud.png\";import Clear from\"./assets/sun.png\";import Rain from\"./assets/rainy-day.png\";import Storm from\"./assets/storm.png\";import Fog from\"./assets/fog.png\";import Snow from\"./assets/snowy.png\";import Humidity from\"./assets/weather.png\";import Wind from\"./assets/wind.png\";import Stars from\"./assets/moon.png\";import Cloudy from\"./assets/cloudy.png\";import Feel from\"./assets/thermometer.png\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import Details from\"./Details\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Home(){const{REACT_APP_API_KEY}=process.env;// Zustände für die Wetterdate\nconst[data,setData]=useState({celsius:10,name:\"Suche Stadt...\",humidity:10,speed:2,image:Cloud,feel:10,sunrise:0,sunset:0,description:\"\",min_temp:\"\",max_temp:\"\"});// Zustand der eigegebenen Stadt\nconst[name,setName]=useState(\"\");// Fehlermeldungen\nconst[error,setError]=useState(\"\");// Zustand, um zu überprüfen, ob es Nacht ist\nconst[isNight,setIsNight]=useState(false);// Zustand, um zu überprüfen, ob bereits eine Stadt abgerufen wurde\nconst[cityFetched,setCityFetched]=useState(false);// Neuer Zustand für die Stadt\nconst[cityName,setCityName]=useState(\"\");// Effekt, um die Geolokalisierung auszuführen, wenn keine Stadt abgerufen wurde\nuseEffect(()=>{if(!cityFetched&&name===\"\"){navigator.geolocation.getCurrentPosition(zeigePosition);}});// Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\nuseEffect(()=>{if(cityFetched){fetchData(data.name);//  API Aufruf für die Stadt, die bereits abgerufen wurde\n}},[isNight]);// Funktion zur Verarbeitung der Geolokalisierungsdaten\nfunction zeigePosition(position){const lat=position.coords.latitude;const lon=position.coords.longitude;const apiURL=\"https://api.openweathermap.org/geo/1.0/reverse?lat=\".concat(lat,\"&lon=\").concat(lon,\"&appid=\").concat(REACT_APP_API_KEY);axios.get(apiURL).then(res=>{const cityName=res.data[0].name;setCityName(cityName);fetchData(cityName);// aus geolocation\nsetCityFetched(true);}).catch(err=>{if(err.response.status===404){setError(\"Invalid City Name\");}else{setError(\"\");}});}// Funktion zum Abrufen von Wetterdaten basierend auf dem Stadtnamen\nfunction fetchData(cityName){const apiURL=\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(cityName,\"&appid=\").concat(REACT_APP_API_KEY,\"&units=metric&lang=de\");axios.get(apiURL).then(res=>{//console.log(res.data);\nlet imagePath=\"\";// Bestimmung von Tag oder Nacht\nconst sunriseTime=res.data.sys.sunrise;const sunsetTime=res.data.sys.sunset;let currentTime=Math.floor(Date.now()/1000);const night=currentTime>=sunsetTime||currentTime<sunriseTime;setIsNight(night);if(night){document.querySelector(\".weather\").classList.add(\"night\");if(res.data.weather[0].main===\"Clouds\"){imagePath=Cloud;}else if(res.data.weather[0].main===\"Clear\"){imagePath=Stars;}else if(res.data.weather[0].main===\"Rain\"){imagePath=Rain;}else if(res.data.weather[0].main===\"Drizzle\"){imagePath=Rain;}else if(res.data.weather[0].main===\"Mist\"){imagePath=Fog;}else if(res.data.weather[0].main===\"Snow\"){imagePath=Snow;}else if(res.data.weather[0].main===\"Thunderstorm\"){imagePath=Storm;}else{imagePath=Cloudy;}}else{document.querySelector(\".weather\").classList.remove(\"night\");if(res.data.weather[0].main===\"Clouds\"){imagePath=Cloud;}else if(res.data.weather[0].main===\"Clear\"){imagePath=Clear;}else if(res.data.weather[0].main===\"Rain\"){imagePath=Rain;}else if(res.data.weather[0].main===\"Drizzle\"){imagePath=Rain;}else if(res.data.weather[0].main===\"Mist\"){imagePath=Fog;}else if(res.data.weather[0].main===\"Snow\"){imagePath=Snow;}else if(res.data.weather[0].main===\"Thunderstorm\"){imagePath=Storm;}else{imagePath=Cloudy;}}setData({...data,celsius:res.data.main.temp,name:res.data.name,humidity:res.data.main.humidity,speed:res.data.wind.speed,image:imagePath,feel:res.data.main.feels_like,sunrise:res.data.sys.sunrise,sunset:res.data.sys.sunset,description:res.data.weather[0].description,min_temp:res.data.main.temp_min,max_temp:res.data.main.temp_max});setError(\"\");setCityFetched(true);// Setze cityFetched auf true, da die Stadt erfolgreich abgerufen wurde\n}).catch(err=>{if(err.response.status===404){setError(\"Invalid City Name\");}else{setError(\"\");}});}const handleClick=()=>{setCityFetched(false);// Setzen des Zustands, um sicherzustellen, dass die Geolokalisierung erneut durchgeführt wird\nif(name!==\"\"){fetchData(name);setCityName(name);//console.log(\"name, manuell:\" + name);\n}};if(cityName){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"current_lo\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"night_shift\",className:\"weather\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"input\",type:\"text\",placeholder:\"Enter City Name\",onChange:e=>setName(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClick,children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-magnifying-glass\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"winfo\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:/*#__PURE__*/_jsx(\"p\",{children:error})}),/*#__PURE__*/_jsx(\"img\",{className:\"main_img\",src:data.image,alt:\"cloud\"}),/*#__PURE__*/_jsxs(\"h1\",{children:[Math.round(data.celsius),\"\\xB0C\"]}),/*#__PURE__*/_jsx(\"h2\",{children:data.name}),/*#__PURE__*/_jsx(\"p\",{className:\"description\",children:data.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"container_temp_infos\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:Feel,alt:\"humidity\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(data.feel),\"\\xB0C\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Gef\\xFChlt wie\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"temps\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"minTemp\",children:[\"min \",Math.round(data.min_temp),\"\\xB0C\"]}),\" \",/*#__PURE__*/_jsxs(\"p\",{children:[\"max \",Math.round(data.max_temp),\"\\xB0C\"]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:Humidity,alt:\"feels like\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(data.humidity),\"%\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Luftfeuchtigkeit\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:Wind,alt:\"wind\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(data.speed),\"km/h\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Wind\"})]})]})]})]}),/*#__PURE__*/_jsx(Details,{cityName:cityName},cityName)]}),/*#__PURE__*/_jsx(\"div\",{className:\"copyright-mobil\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://www.flaticon.com/free-icons/weather\",title:\"weather icons\",children:\"Weather icons created by iconixar - Flaticon\"})})]})]})});}else{return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"current_lo\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"night_shift\",className:\"weather\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"input\",type:\"text\",placeholder:\"Enter City Name\",onChange:e=>setName(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClick,children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-magnifying-glass\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"winfo\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:/*#__PURE__*/_jsx(\"p\",{children:error})}),/*#__PURE__*/_jsx(\"img\",{className:\"main_img\",src:data.image,alt:\"cloud\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"spinner-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"description\",children:data.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"container_temp_infos\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:Feel,alt:\"humidity\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(data.feel),\"\\xB0C\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Gef\\xFChlt wie\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"temps\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"minTemp\",children:[\"min \",Math.round(data.min_temp),\"\\xB0C\"]}),\" \",/*#__PURE__*/_jsxs(\"p\",{children:[\"max \",Math.round(data.max_temp),\"\\xB0C\"]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:Humidity,alt:\"feels like\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(data.humidity),\"%\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Luftfeuchtigkeit\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:Wind,alt:\"wind\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(data.speed),\"km/h\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Wind\"})]})]})]})]}),/*#__PURE__*/_jsx(Details,{cityName:cityName},cityName)]}),/*#__PURE__*/_jsx(\"div\",{className:\"copyright-mobil\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://www.flaticon.com/free-icons/weather\",title:\"weather icons\",children:\"Weather icons created by iconixar - Flaticon\"})})]})]})});}}export default Home;","map":{"version":3,"names":["Cloud","Clear","Rain","Storm","Fog","Snow","Humidity","Wind","Stars","Cloudy","Feel","React","useState","useEffect","axios","Details","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Home","REACT_APP_API_KEY","process","env","data","setData","celsius","name","humidity","speed","image","feel","sunrise","sunset","description","min_temp","max_temp","setName","error","setError","isNight","setIsNight","cityFetched","setCityFetched","cityName","setCityName","navigator","geolocation","getCurrentPosition","zeigePosition","fetchData","position","lat","coords","latitude","lon","longitude","apiURL","concat","get","then","res","catch","err","response","status","imagePath","sunriseTime","sys","sunsetTime","currentTime","Math","floor","Date","now","night","document","querySelector","classList","add","weather","main","remove","temp","wind","feels_like","temp_min","temp_max","handleClick","children","className","id","type","placeholder","onChange","e","target","value","onClick","src","alt","round","href","title"],"sources":["/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Home.js"],"sourcesContent":["import \"../style.css\";\nimport Cloud from \"./assets/cloud.png\";\nimport Clear from \"./assets/sun.png\";\nimport Rain from \"./assets/rainy-day.png\";\nimport Storm from \"./assets/storm.png\";\nimport Fog from \"./assets/fog.png\";\nimport Snow from \"./assets/snowy.png\";\nimport Humidity from \"./assets/weather.png\";\nimport Wind from \"./assets/wind.png\";\nimport Stars from \"./assets/moon.png\";\nimport Cloudy from \"./assets/cloudy.png\";\nimport Feel from \"./assets/thermometer.png\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Details from \"./Details\";\n\nfunction Home() {\n  const { REACT_APP_API_KEY } = process.env;\n\n  // Zustände für die Wetterdate\n  const [data, setData] = useState({\n    celsius: 10,\n    name: \"Suche Stadt...\",\n    humidity: 10,\n    speed: 2,\n    image: Cloud,\n    feel: 10,\n    sunrise: 0,\n    sunset: 0,\n    description: \"\",\n    min_temp: \"\",\n    max_temp: \"\",\n  });\n\n  // Zustand der eigegebenen Stadt\n  const [name, setName] = useState(\"\");\n  // Fehlermeldungen\n  const [error, setError] = useState(\"\");\n  // Zustand, um zu überprüfen, ob es Nacht ist\n  const [isNight, setIsNight] = useState(false);\n  // Zustand, um zu überprüfen, ob bereits eine Stadt abgerufen wurde\n  const [cityFetched, setCityFetched] = useState(false);\n  // Neuer Zustand für die Stadt\n  const [cityName, setCityName] = useState(\"\");\n\n  // Effekt, um die Geolokalisierung auszuführen, wenn keine Stadt abgerufen wurde\n  useEffect(() => {\n    if (!cityFetched && name === \"\") {\n      navigator.geolocation.getCurrentPosition(zeigePosition);\n    }\n  });\n\n  // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n  useEffect(() => {\n    if (cityFetched) {\n      fetchData(data.name); //  API Aufruf für die Stadt, die bereits abgerufen wurde\n    }\n  }, [isNight]);\n\n  // Funktion zur Verarbeitung der Geolokalisierungsdaten\n  function zeigePosition(position) {\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n\n    const apiURL = `https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&appid=${REACT_APP_API_KEY}`;\n\n    axios\n      .get(apiURL)\n      .then((res) => {\n        const cityName = res.data[0].name;\n        setCityName(cityName);\n        fetchData(cityName); // aus geolocation\n        setCityFetched(true);\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          setError(\"Invalid City Name\");\n        } else {\n          setError(\"\");\n        }\n      });\n  }\n\n  // Funktion zum Abrufen von Wetterdaten basierend auf dem Stadtnamen\n  function fetchData(cityName) {\n    const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n\n    axios\n      .get(apiURL)\n      .then((res) => {\n        //console.log(res.data);\n        let imagePath = \"\";\n\n        // Bestimmung von Tag oder Nacht\n        const sunriseTime = res.data.sys.sunrise;\n        const sunsetTime = res.data.sys.sunset;\n        let currentTime = Math.floor(Date.now() / 1000);\n        const night = currentTime >= sunsetTime || currentTime < sunriseTime;\n        setIsNight(night);\n\n        if (night) {\n          document.querySelector(\".weather\").classList.add(\"night\");\n          if (res.data.weather[0].main === \"Clouds\") {\n            imagePath = Cloud;\n          } else if (res.data.weather[0].main === \"Clear\") {\n            imagePath = Stars;\n          } else if (res.data.weather[0].main === \"Rain\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Drizzle\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Mist\") {\n            imagePath = Fog;\n          } else if (res.data.weather[0].main === \"Snow\") {\n            imagePath = Snow;\n          } else if (res.data.weather[0].main === \"Thunderstorm\") {\n            imagePath = Storm;\n          } else {\n            imagePath = Cloudy;\n          }\n        } else {\n          document.querySelector(\".weather\").classList.remove(\"night\");\n          if (res.data.weather[0].main === \"Clouds\") {\n            imagePath = Cloud;\n          } else if (res.data.weather[0].main === \"Clear\") {\n            imagePath = Clear;\n          } else if (res.data.weather[0].main === \"Rain\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Drizzle\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Mist\") {\n            imagePath = Fog;\n          } else if (res.data.weather[0].main === \"Snow\") {\n            imagePath = Snow;\n          } else if (res.data.weather[0].main === \"Thunderstorm\") {\n            imagePath = Storm;\n          } else {\n            imagePath = Cloudy;\n          }\n        }\n\n        setData({\n          ...data,\n          celsius: res.data.main.temp,\n          name: res.data.name,\n          humidity: res.data.main.humidity,\n          speed: res.data.wind.speed,\n          image: imagePath,\n          feel: res.data.main.feels_like,\n          sunrise: res.data.sys.sunrise,\n          sunset: res.data.sys.sunset,\n          description: res.data.weather[0].description,\n          min_temp: res.data.main.temp_min,\n          max_temp: res.data.main.temp_max,\n        });\n        setError(\"\");\n        setCityFetched(true); // Setze cityFetched auf true, da die Stadt erfolgreich abgerufen wurde\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          setError(\"Invalid City Name\");\n        } else {\n          setError(\"\");\n        }\n      });\n  }\n\n  const handleClick = () => {\n    setCityFetched(false); // Setzen des Zustands, um sicherzustellen, dass die Geolokalisierung erneut durchgeführt wird\n    if (name !== \"\") {\n      fetchData(name);\n      setCityName(name);\n      //console.log(\"name, manuell:\" + name);\n    }\n  };\n\n  if (cityName) {\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"current_lo\"></div>\n          <div id=\"night_shift\" className=\"weather\">\n            <div className=\"search\">\n              <input\n                id=\"input\"\n                type=\"text\"\n                placeholder=\"Enter City Name\"\n                onChange={(e) => setName(e.target.value)}\n              />\n              <button onClick={handleClick}>\n                <i className=\"fa-solid fa-magnifying-glass\"></i>\n              </button>\n            </div>\n            <div className=\"winfo\">\n              <div className=\"error\">\n                <p>{error}</p>\n              </div>\n              <img className=\"main_img\" src={data.image} alt=\"cloud\" />\n              <h1>{Math.round(data.celsius)}°C</h1>\n              <h2>{data.name}</h2>\n              <p className=\"description\">{data.description}</p>\n              <div className=\"container_temp_infos\">\n                <div className=\"details\">\n                  <div className=\"col\">\n                    <div>\n                      <img src={Feel} alt=\"humidity\" />\n                    </div>\n                    <div>\n                      <p>{Math.round(data.feel)}°C</p>\n                      <p>Gefühlt wie</p>\n                    </div>\n                  </div>\n                  <div className=\"col\">\n                    <div className=\"temps\">\n                      <p className=\"minTemp\">\n                        min {Math.round(data.min_temp)}°C\n                      </p>{\" \"}\n                      <p>max {Math.round(data.max_temp)}°C</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"details\">\n                  <div className=\"col\">\n                    <div>\n                      <img src={Humidity} alt=\"feels like\" />\n                    </div>\n                    <div>\n                      <p>{Math.round(data.humidity)}%</p>\n                      <p>Luftfeuchtigkeit</p>\n                    </div>\n                  </div>\n                  <div className=\"col\">\n                    <div>\n                      <img src={Wind} alt=\"wind\" />\n                    </div>\n                    <div>\n                      <p>{Math.round(data.speed)}km/h</p>\n                      <p>Wind</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <Details key={cityName} cityName={cityName} />\n            </div>\n            <div className=\"copyright-mobil\">\n              <a\n                href=\"https://www.flaticon.com/free-icons/weather\"\n                title=\"weather icons\"\n              >\n                Weather icons created by iconixar - Flaticon\n              </a>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"current_lo\"></div>\n          <div id=\"night_shift\" className=\"weather\">\n            <div className=\"search\">\n              <input\n                id=\"input\"\n                type=\"text\"\n                placeholder=\"Enter City Name\"\n                onChange={(e) => setName(e.target.value)}\n              />\n              <button onClick={handleClick}>\n                <i className=\"fa-solid fa-magnifying-glass\"></i>\n              </button>\n            </div>\n            <div className=\"winfo\">\n              <div className=\"error\">\n                <p>{error}</p>\n              </div>\n              <img className=\"main_img\" src={data.image} alt=\"cloud\" />{\" \"}\n              <div className=\"spinner-container\">\n                <div className=\"spinner\"></div>\n              </div>\n              <p className=\"description\">{data.description}</p>\n              <div className=\"container_temp_infos\">\n                <div className=\"details\">\n                  <div className=\"col\">\n                    <div>\n                      <img src={Feel} alt=\"humidity\" />\n                    </div>\n                    <div>\n                      <p>{Math.round(data.feel)}°C</p>\n                      <p>Gefühlt wie</p>\n                    </div>\n                  </div>\n                  <div className=\"col\">\n                    <div className=\"temps\">\n                      <p className=\"minTemp\">\n                        min {Math.round(data.min_temp)}°C\n                      </p>{\" \"}\n                      <p>max {Math.round(data.max_temp)}°C</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"details\">\n                  <div className=\"col\">\n                    <div>\n                      <img src={Humidity} alt=\"feels like\" />\n                    </div>\n                    <div>\n                      <p>{Math.round(data.humidity)}%</p>\n                      <p>Luftfeuchtigkeit</p>\n                    </div>\n                  </div>\n                  <div className=\"col\">\n                    <div>\n                      <img src={Wind} alt=\"wind\" />\n                    </div>\n                    <div>\n                      <p>{Math.round(data.speed)}km/h</p>\n                      <p>Wind</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <Details key={cityName} cityName={cityName} />\n            </div>\n            <div className=\"copyright-mobil\">\n              <a\n                href=\"https://www.flaticon.com/free-icons/weather\"\n                title=\"weather icons\"\n              >\n                Weather icons created by iconixar - Flaticon\n              </a>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Home;\n"],"mappings":"AAAA,MAAO,cAAc,CACrB,MAAO,CAAAA,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,KAAK,KAAM,kBAAkB,CACpC,MAAO,CAAAC,IAAI,KAAM,wBAAwB,CACzC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,GAAG,KAAM,kBAAkB,CAClC,MAAO,CAAAC,IAAI,KAAM,oBAAoB,CACrC,MAAO,CAAAC,QAAQ,KAAM,sBAAsB,CAC3C,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,KAAK,KAAM,mBAAmB,CACrC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,IAAI,KAAM,0BAA0B,CAC3C,MAAO,CAAAC,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,OAAO,KAAM,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEhC,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACd,KAAM,CAAEC,iBAAkB,CAAC,CAAGC,OAAO,CAACC,GAAG,CAEzC;AACA,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAAC,CAC/BgB,OAAO,CAAE,EAAE,CACXC,IAAI,CAAE,gBAAgB,CACtBC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,CAAC,CACRC,KAAK,CAAEhC,KAAK,CACZiC,IAAI,CAAE,EAAE,CACRC,OAAO,CAAE,CAAC,CACVC,MAAM,CAAE,CAAC,CACTC,WAAW,CAAE,EAAE,CACfC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EACZ,CAAC,CAAC,CAEF;AACA,KAAM,CAACT,IAAI,CAAEU,OAAO,CAAC,CAAG3B,QAAQ,CAAC,EAAE,CAAC,CACpC;AACA,KAAM,CAAC4B,KAAK,CAAEC,QAAQ,CAAC,CAAG7B,QAAQ,CAAC,EAAE,CAAC,CACtC;AACA,KAAM,CAAC8B,OAAO,CAAEC,UAAU,CAAC,CAAG/B,QAAQ,CAAC,KAAK,CAAC,CAC7C;AACA,KAAM,CAACgC,WAAW,CAAEC,cAAc,CAAC,CAAGjC,QAAQ,CAAC,KAAK,CAAC,CACrD;AACA,KAAM,CAACkC,QAAQ,CAAEC,WAAW,CAAC,CAAGnC,QAAQ,CAAC,EAAE,CAAC,CAE5C;AACAC,SAAS,CAAC,IAAM,CACd,GAAI,CAAC+B,WAAW,EAAIf,IAAI,GAAK,EAAE,CAAE,CAC/BmB,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACC,aAAa,CAAC,CACzD,CACF,CAAC,CAAC,CAEF;AACAtC,SAAS,CAAC,IAAM,CACd,GAAI+B,WAAW,CAAE,CACfQ,SAAS,CAAC1B,IAAI,CAACG,IAAI,CAAC,CAAE;AACxB,CACF,CAAC,CAAE,CAACa,OAAO,CAAC,CAAC,CAEb;AACA,QAAS,CAAAS,aAAaA,CAACE,QAAQ,CAAE,CAC/B,KAAM,CAAAC,GAAG,CAAGD,QAAQ,CAACE,MAAM,CAACC,QAAQ,CACpC,KAAM,CAAAC,GAAG,CAAGJ,QAAQ,CAACE,MAAM,CAACG,SAAS,CAErC,KAAM,CAAAC,MAAM,uDAAAC,MAAA,CAAyDN,GAAG,UAAAM,MAAA,CAAQH,GAAG,YAAAG,MAAA,CAAUrC,iBAAiB,CAAE,CAEhHT,KAAK,CACF+C,GAAG,CAACF,MAAM,CAAC,CACXG,IAAI,CAAEC,GAAG,EAAK,CACb,KAAM,CAAAjB,QAAQ,CAAGiB,GAAG,CAACrC,IAAI,CAAC,CAAC,CAAC,CAACG,IAAI,CACjCkB,WAAW,CAACD,QAAQ,CAAC,CACrBM,SAAS,CAACN,QAAQ,CAAC,CAAE;AACrBD,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAAC,CACDmB,KAAK,CAAEC,GAAG,EAAK,CACd,GAAIA,GAAG,CAACC,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAE,CAC/B1B,QAAQ,CAAC,mBAAmB,CAAC,CAC/B,CAAC,IAAM,CACLA,QAAQ,CAAC,EAAE,CAAC,CACd,CACF,CAAC,CAAC,CACN,CAEA;AACA,QAAS,CAAAW,SAASA,CAACN,QAAQ,CAAE,CAC3B,KAAM,CAAAa,MAAM,sDAAAC,MAAA,CAAwDd,QAAQ,YAAAc,MAAA,CAAUrC,iBAAiB,yBAAuB,CAE9HT,KAAK,CACF+C,GAAG,CAACF,MAAM,CAAC,CACXG,IAAI,CAAEC,GAAG,EAAK,CACb;AACA,GAAI,CAAAK,SAAS,CAAG,EAAE,CAElB;AACA,KAAM,CAAAC,WAAW,CAAGN,GAAG,CAACrC,IAAI,CAAC4C,GAAG,CAACpC,OAAO,CACxC,KAAM,CAAAqC,UAAU,CAAGR,GAAG,CAACrC,IAAI,CAAC4C,GAAG,CAACnC,MAAM,CACtC,GAAI,CAAAqC,WAAW,CAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,IAAI,CAAC,CAC/C,KAAM,CAAAC,KAAK,CAAGL,WAAW,EAAID,UAAU,EAAIC,WAAW,CAAGH,WAAW,CACpE1B,UAAU,CAACkC,KAAK,CAAC,CAEjB,GAAIA,KAAK,CAAE,CACTC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC,CAACC,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC,CACzD,GAAIlB,GAAG,CAACrC,IAAI,CAACwD,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,GAAK,QAAQ,CAAE,CACzCf,SAAS,CAAGpE,KAAK,CACnB,CAAC,IAAM,IAAI+D,GAAG,CAACrC,IAAI,CAACwD,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,GAAK,OAAO,CAAE,CAC/Cf,SAAS,CAAG5D,KAAK,CACnB,CAAC,IAAM,IAAIuD,GAAG,CAACrC,IAAI,CAACwD,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,GAAK,MAAM,CAAE,CAC9Cf,SAAS,CAAGlE,IAAI,CAClB,CAAC,IAAM,IAAI6D,GAAG,CAACrC,IAAI,CAACwD,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,GAAK,SAAS,CAAE,CACjDf,SAAS,CAAGlE,IAAI,CAClB,CAAC,IAAM,IAAI6D,GAAG,CAACrC,IAAI,CAACwD,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,GAAK,MAAM,CAAE,CAC9Cf,SAAS,CAAGhE,GAAG,CACjB,CAAC,IAAM,IAAI2D,GAAG,CAACrC,IAAI,CAACwD,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,GAAK,MAAM,CAAE,CAC9Cf,SAAS,CAAG/D,IAAI,CAClB,CAAC,IAAM,IAAI0D,GAAG,CAACrC,IAAI,CAACwD,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,GAAK,cAAc,CAAE,CACtDf,SAAS,CAAGjE,KAAK,CACnB,CAAC,IAAM,CACLiE,SAAS,CAAG3D,MAAM,CACpB,CACF,CAAC,IAAM,CACLqE,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC,CAACC,SAAS,CAACI,MAAM,CAAC,OAAO,CAAC,CAC5D,GAAIrB,GAAG,CAACrC,IAAI,CAACwD,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,GAAK,QAAQ,CAAE,CACzCf,SAAS,CAAGpE,KAAK,CACnB,CAAC,IAAM,IAAI+D,GAAG,CAACrC,IAAI,CAACwD,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,GAAK,OAAO,CAAE,CAC/Cf,SAAS,CAAGnE,KAAK,CACnB,CAAC,IAAM,IAAI8D,GAAG,CAACrC,IAAI,CAACwD,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,GAAK,MAAM,CAAE,CAC9Cf,SAAS,CAAGlE,IAAI,CAClB,CAAC,IAAM,IAAI6D,GAAG,CAACrC,IAAI,CAACwD,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,GAAK,SAAS,CAAE,CACjDf,SAAS,CAAGlE,IAAI,CAClB,CAAC,IAAM,IAAI6D,GAAG,CAACrC,IAAI,CAACwD,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,GAAK,MAAM,CAAE,CAC9Cf,SAAS,CAAGhE,GAAG,CACjB,CAAC,IAAM,IAAI2D,GAAG,CAACrC,IAAI,CAACwD,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,GAAK,MAAM,CAAE,CAC9Cf,SAAS,CAAG/D,IAAI,CAClB,CAAC,IAAM,IAAI0D,GAAG,CAACrC,IAAI,CAACwD,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,GAAK,cAAc,CAAE,CACtDf,SAAS,CAAGjE,KAAK,CACnB,CAAC,IAAM,CACLiE,SAAS,CAAG3D,MAAM,CACpB,CACF,CAEAkB,OAAO,CAAC,CACN,GAAGD,IAAI,CACPE,OAAO,CAAEmC,GAAG,CAACrC,IAAI,CAACyD,IAAI,CAACE,IAAI,CAC3BxD,IAAI,CAAEkC,GAAG,CAACrC,IAAI,CAACG,IAAI,CACnBC,QAAQ,CAAEiC,GAAG,CAACrC,IAAI,CAACyD,IAAI,CAACrD,QAAQ,CAChCC,KAAK,CAAEgC,GAAG,CAACrC,IAAI,CAAC4D,IAAI,CAACvD,KAAK,CAC1BC,KAAK,CAAEoC,SAAS,CAChBnC,IAAI,CAAE8B,GAAG,CAACrC,IAAI,CAACyD,IAAI,CAACI,UAAU,CAC9BrD,OAAO,CAAE6B,GAAG,CAACrC,IAAI,CAAC4C,GAAG,CAACpC,OAAO,CAC7BC,MAAM,CAAE4B,GAAG,CAACrC,IAAI,CAAC4C,GAAG,CAACnC,MAAM,CAC3BC,WAAW,CAAE2B,GAAG,CAACrC,IAAI,CAACwD,OAAO,CAAC,CAAC,CAAC,CAAC9C,WAAW,CAC5CC,QAAQ,CAAE0B,GAAG,CAACrC,IAAI,CAACyD,IAAI,CAACK,QAAQ,CAChClD,QAAQ,CAAEyB,GAAG,CAACrC,IAAI,CAACyD,IAAI,CAACM,QAC1B,CAAC,CAAC,CACFhD,QAAQ,CAAC,EAAE,CAAC,CACZI,cAAc,CAAC,IAAI,CAAC,CAAE;AACxB,CAAC,CAAC,CACDmB,KAAK,CAAEC,GAAG,EAAK,CACd,GAAIA,GAAG,CAACC,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAE,CAC/B1B,QAAQ,CAAC,mBAAmB,CAAC,CAC/B,CAAC,IAAM,CACLA,QAAQ,CAAC,EAAE,CAAC,CACd,CACF,CAAC,CAAC,CACN,CAEA,KAAM,CAAAiD,WAAW,CAAGA,CAAA,GAAM,CACxB7C,cAAc,CAAC,KAAK,CAAC,CAAE;AACvB,GAAIhB,IAAI,GAAK,EAAE,CAAE,CACfuB,SAAS,CAACvB,IAAI,CAAC,CACfkB,WAAW,CAAClB,IAAI,CAAC,CACjB;AACF,CACF,CAAC,CAED,GAAIiB,QAAQ,CAAE,CACZ,mBACE7B,IAAA,CAAAI,SAAA,EAAAsE,QAAA,cACExE,KAAA,QAAKyE,SAAS,CAAC,WAAW,CAAAD,QAAA,eACxB1E,IAAA,QAAK2E,SAAS,CAAC,YAAY,CAAM,CAAC,cAClCzE,KAAA,QAAK0E,EAAE,CAAC,aAAa,CAACD,SAAS,CAAC,SAAS,CAAAD,QAAA,eACvCxE,KAAA,QAAKyE,SAAS,CAAC,QAAQ,CAAAD,QAAA,eACrB1E,IAAA,UACE4E,EAAE,CAAC,OAAO,CACVC,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,iBAAiB,CAC7BC,QAAQ,CAAGC,CAAC,EAAK1D,OAAO,CAAC0D,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAC1C,CAAC,cACFlF,IAAA,WAAQmF,OAAO,CAAEV,WAAY,CAAAC,QAAA,cAC3B1E,IAAA,MAAG2E,SAAS,CAAC,8BAA8B,CAAI,CAAC,CAC1C,CAAC,EACN,CAAC,cACNzE,KAAA,QAAKyE,SAAS,CAAC,OAAO,CAAAD,QAAA,eACpB1E,IAAA,QAAK2E,SAAS,CAAC,OAAO,CAAAD,QAAA,cACpB1E,IAAA,MAAA0E,QAAA,CAAInD,KAAK,CAAI,CAAC,CACX,CAAC,cACNvB,IAAA,QAAK2E,SAAS,CAAC,UAAU,CAACS,GAAG,CAAE3E,IAAI,CAACM,KAAM,CAACsE,GAAG,CAAC,OAAO,CAAE,CAAC,cACzDnF,KAAA,OAAAwE,QAAA,EAAKlB,IAAI,CAAC8B,KAAK,CAAC7E,IAAI,CAACE,OAAO,CAAC,CAAC,OAAE,EAAI,CAAC,cACrCX,IAAA,OAAA0E,QAAA,CAAKjE,IAAI,CAACG,IAAI,CAAK,CAAC,cACpBZ,IAAA,MAAG2E,SAAS,CAAC,aAAa,CAAAD,QAAA,CAAEjE,IAAI,CAACU,WAAW,CAAI,CAAC,cACjDjB,KAAA,QAAKyE,SAAS,CAAC,sBAAsB,CAAAD,QAAA,eACnCxE,KAAA,QAAKyE,SAAS,CAAC,SAAS,CAAAD,QAAA,eACtBxE,KAAA,QAAKyE,SAAS,CAAC,KAAK,CAAAD,QAAA,eAClB1E,IAAA,QAAA0E,QAAA,cACE1E,IAAA,QAAKoF,GAAG,CAAE3F,IAAK,CAAC4F,GAAG,CAAC,UAAU,CAAE,CAAC,CAC9B,CAAC,cACNnF,KAAA,QAAAwE,QAAA,eACExE,KAAA,MAAAwE,QAAA,EAAIlB,IAAI,CAAC8B,KAAK,CAAC7E,IAAI,CAACO,IAAI,CAAC,CAAC,OAAE,EAAG,CAAC,cAChChB,IAAA,MAAA0E,QAAA,CAAG,gBAAW,CAAG,CAAC,EACf,CAAC,EACH,CAAC,cACN1E,IAAA,QAAK2E,SAAS,CAAC,KAAK,CAAAD,QAAA,cAClBxE,KAAA,QAAKyE,SAAS,CAAC,OAAO,CAAAD,QAAA,eACpBxE,KAAA,MAAGyE,SAAS,CAAC,SAAS,CAAAD,QAAA,EAAC,MACjB,CAAClB,IAAI,CAAC8B,KAAK,CAAC7E,IAAI,CAACW,QAAQ,CAAC,CAAC,OACjC,EAAG,CAAC,CAAC,GAAG,cACRlB,KAAA,MAAAwE,QAAA,EAAG,MAAI,CAAClB,IAAI,CAAC8B,KAAK,CAAC7E,IAAI,CAACY,QAAQ,CAAC,CAAC,OAAE,EAAG,CAAC,EACrC,CAAC,CACH,CAAC,EACH,CAAC,cACNnB,KAAA,QAAKyE,SAAS,CAAC,SAAS,CAAAD,QAAA,eACtBxE,KAAA,QAAKyE,SAAS,CAAC,KAAK,CAAAD,QAAA,eAClB1E,IAAA,QAAA0E,QAAA,cACE1E,IAAA,QAAKoF,GAAG,CAAE/F,QAAS,CAACgG,GAAG,CAAC,YAAY,CAAE,CAAC,CACpC,CAAC,cACNnF,KAAA,QAAAwE,QAAA,eACExE,KAAA,MAAAwE,QAAA,EAAIlB,IAAI,CAAC8B,KAAK,CAAC7E,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAC,EAAG,CAAC,cACnCb,IAAA,MAAA0E,QAAA,CAAG,kBAAgB,CAAG,CAAC,EACpB,CAAC,EACH,CAAC,cACNxE,KAAA,QAAKyE,SAAS,CAAC,KAAK,CAAAD,QAAA,eAClB1E,IAAA,QAAA0E,QAAA,cACE1E,IAAA,QAAKoF,GAAG,CAAE9F,IAAK,CAAC+F,GAAG,CAAC,MAAM,CAAE,CAAC,CAC1B,CAAC,cACNnF,KAAA,QAAAwE,QAAA,eACExE,KAAA,MAAAwE,QAAA,EAAIlB,IAAI,CAAC8B,KAAK,CAAC7E,IAAI,CAACK,KAAK,CAAC,CAAC,MAAI,EAAG,CAAC,cACnCd,IAAA,MAAA0E,QAAA,CAAG,MAAI,CAAG,CAAC,EACR,CAAC,EACH,CAAC,EACH,CAAC,EACH,CAAC,cACN1E,IAAA,CAACF,OAAO,EAAgB+B,QAAQ,CAAEA,QAAS,EAA7BA,QAA+B,CAAC,EAC3C,CAAC,cACN7B,IAAA,QAAK2E,SAAS,CAAC,iBAAiB,CAAAD,QAAA,cAC9B1E,IAAA,MACEuF,IAAI,CAAC,6CAA6C,CAClDC,KAAK,CAAC,eAAe,CAAAd,QAAA,CACtB,8CAED,CAAG,CAAC,CACD,CAAC,EACH,CAAC,EACH,CAAC,CACN,CAAC,CAEP,CAAC,IAAM,CACL,mBACE1E,IAAA,CAAAI,SAAA,EAAAsE,QAAA,cACExE,KAAA,QAAKyE,SAAS,CAAC,WAAW,CAAAD,QAAA,eACxB1E,IAAA,QAAK2E,SAAS,CAAC,YAAY,CAAM,CAAC,cAClCzE,KAAA,QAAK0E,EAAE,CAAC,aAAa,CAACD,SAAS,CAAC,SAAS,CAAAD,QAAA,eACvCxE,KAAA,QAAKyE,SAAS,CAAC,QAAQ,CAAAD,QAAA,eACrB1E,IAAA,UACE4E,EAAE,CAAC,OAAO,CACVC,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,iBAAiB,CAC7BC,QAAQ,CAAGC,CAAC,EAAK1D,OAAO,CAAC0D,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAC1C,CAAC,cACFlF,IAAA,WAAQmF,OAAO,CAAEV,WAAY,CAAAC,QAAA,cAC3B1E,IAAA,MAAG2E,SAAS,CAAC,8BAA8B,CAAI,CAAC,CAC1C,CAAC,EACN,CAAC,cACNzE,KAAA,QAAKyE,SAAS,CAAC,OAAO,CAAAD,QAAA,eACpB1E,IAAA,QAAK2E,SAAS,CAAC,OAAO,CAAAD,QAAA,cACpB1E,IAAA,MAAA0E,QAAA,CAAInD,KAAK,CAAI,CAAC,CACX,CAAC,cACNvB,IAAA,QAAK2E,SAAS,CAAC,UAAU,CAACS,GAAG,CAAE3E,IAAI,CAACM,KAAM,CAACsE,GAAG,CAAC,OAAO,CAAE,CAAC,CAAC,GAAG,cAC7DrF,IAAA,QAAK2E,SAAS,CAAC,mBAAmB,CAAAD,QAAA,cAChC1E,IAAA,QAAK2E,SAAS,CAAC,SAAS,CAAM,CAAC,CAC5B,CAAC,cACN3E,IAAA,MAAG2E,SAAS,CAAC,aAAa,CAAAD,QAAA,CAAEjE,IAAI,CAACU,WAAW,CAAI,CAAC,cACjDjB,KAAA,QAAKyE,SAAS,CAAC,sBAAsB,CAAAD,QAAA,eACnCxE,KAAA,QAAKyE,SAAS,CAAC,SAAS,CAAAD,QAAA,eACtBxE,KAAA,QAAKyE,SAAS,CAAC,KAAK,CAAAD,QAAA,eAClB1E,IAAA,QAAA0E,QAAA,cACE1E,IAAA,QAAKoF,GAAG,CAAE3F,IAAK,CAAC4F,GAAG,CAAC,UAAU,CAAE,CAAC,CAC9B,CAAC,cACNnF,KAAA,QAAAwE,QAAA,eACExE,KAAA,MAAAwE,QAAA,EAAIlB,IAAI,CAAC8B,KAAK,CAAC7E,IAAI,CAACO,IAAI,CAAC,CAAC,OAAE,EAAG,CAAC,cAChChB,IAAA,MAAA0E,QAAA,CAAG,gBAAW,CAAG,CAAC,EACf,CAAC,EACH,CAAC,cACN1E,IAAA,QAAK2E,SAAS,CAAC,KAAK,CAAAD,QAAA,cAClBxE,KAAA,QAAKyE,SAAS,CAAC,OAAO,CAAAD,QAAA,eACpBxE,KAAA,MAAGyE,SAAS,CAAC,SAAS,CAAAD,QAAA,EAAC,MACjB,CAAClB,IAAI,CAAC8B,KAAK,CAAC7E,IAAI,CAACW,QAAQ,CAAC,CAAC,OACjC,EAAG,CAAC,CAAC,GAAG,cACRlB,KAAA,MAAAwE,QAAA,EAAG,MAAI,CAAClB,IAAI,CAAC8B,KAAK,CAAC7E,IAAI,CAACY,QAAQ,CAAC,CAAC,OAAE,EAAG,CAAC,EACrC,CAAC,CACH,CAAC,EACH,CAAC,cACNnB,KAAA,QAAKyE,SAAS,CAAC,SAAS,CAAAD,QAAA,eACtBxE,KAAA,QAAKyE,SAAS,CAAC,KAAK,CAAAD,QAAA,eAClB1E,IAAA,QAAA0E,QAAA,cACE1E,IAAA,QAAKoF,GAAG,CAAE/F,QAAS,CAACgG,GAAG,CAAC,YAAY,CAAE,CAAC,CACpC,CAAC,cACNnF,KAAA,QAAAwE,QAAA,eACExE,KAAA,MAAAwE,QAAA,EAAIlB,IAAI,CAAC8B,KAAK,CAAC7E,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAC,EAAG,CAAC,cACnCb,IAAA,MAAA0E,QAAA,CAAG,kBAAgB,CAAG,CAAC,EACpB,CAAC,EACH,CAAC,cACNxE,KAAA,QAAKyE,SAAS,CAAC,KAAK,CAAAD,QAAA,eAClB1E,IAAA,QAAA0E,QAAA,cACE1E,IAAA,QAAKoF,GAAG,CAAE9F,IAAK,CAAC+F,GAAG,CAAC,MAAM,CAAE,CAAC,CAC1B,CAAC,cACNnF,KAAA,QAAAwE,QAAA,eACExE,KAAA,MAAAwE,QAAA,EAAIlB,IAAI,CAAC8B,KAAK,CAAC7E,IAAI,CAACK,KAAK,CAAC,CAAC,MAAI,EAAG,CAAC,cACnCd,IAAA,MAAA0E,QAAA,CAAG,MAAI,CAAG,CAAC,EACR,CAAC,EACH,CAAC,EACH,CAAC,EACH,CAAC,cACN1E,IAAA,CAACF,OAAO,EAAgB+B,QAAQ,CAAEA,QAAS,EAA7BA,QAA+B,CAAC,EAC3C,CAAC,cACN7B,IAAA,QAAK2E,SAAS,CAAC,iBAAiB,CAAAD,QAAA,cAC9B1E,IAAA,MACEuF,IAAI,CAAC,6CAA6C,CAClDC,KAAK,CAAC,eAAe,CAAAd,QAAA,CACtB,8CAED,CAAG,CAAC,CACD,CAAC,EACH,CAAC,EACH,CAAC,CACN,CAAC,CAEP,CACF,CAEA,cAAe,CAAArE,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}