{"ast":null,"code":"var _jsxFileName = \"/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Details.js\",\n  _s = $RefreshSig$();\n// Details.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Cloud from \"./assets/cloud.png\";\nimport Clear from \"./assets/sun.png\";\nimport Rain from \"./assets/rainy-day.png\";\nimport Storm from \"./assets/storm.png\";\nimport Fog from \"./assets/fog.png\";\nimport Snow from \"./assets/snowy.png\";\nimport Cloudy from \"./assets/cloudy.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Details({\n  cityName,\n  minTemp,\n  maxTemp,\n  image\n}) {\n  _s();\n  // Zugriff auf die API-Schlüssel aus den Umgebungsvariablen\n  const {\n    REACT_APP_API_KEY\n  } = process.env;\n\n  // Ermitteln der Wochentage\n  let daysOfWeek = [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"];\n\n  // Index des heutigen Wochentags\n  let today = new Date().getDay();\n\n  // Objekt zum Sammeln der Mindest- und Maximaltemperaturen für jeden Tag\n  let tempsByDay = {};\n  const [day2_minTemp, setDay2_minTemp] = useState(\"\");\n  const [day3_minTemp, setDay3_minTemp] = useState(\"\");\n  const [day4_minTemp, setDay4_minTemp] = useState(\"\");\n  const [day5_minTemp, setDay5_minTemp] = useState(\"\");\n  const [day6_minTemp, setDay6_minTemp] = useState(\"\");\n  const [day2_maxTemp, setDay2_maxTemp] = useState(\"\");\n  const [day3_maxTemp, setDay3_maxTemp] = useState(\"\");\n  const [day4_maxTemp, setDay4_maxTemp] = useState(\"\");\n  const [day5_maxTemp, setDay5_maxTemp] = useState(\"\");\n  const [day6_maxTemp, setDay6_maxTemp] = useState(\"\");\n  const [day2_name, setDay2Name] = useState(\"\");\n  const [day3_name, setDay3Name] = useState(\"\");\n  const [day4_name, setDay4Name] = useState(\"\");\n  const [day5_name, setDay5Name] = useState(\"\");\n  const [day6_name, setDay6Name] = useState(\"\");\n  const [day2_image, setDay2Image] = useState(\"\");\n\n  //console.log(cityName);\n  const apiURL = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n  axios.get(apiURL).then(res => {\n    console.log(res.data.list);\n    console.log(res.data.list[0].weather[0].main);\n    let imagePath = \"\";\n\n    // let apiDate = new Date(res.data.list[0].dt_txt).getDay(); // Index des Wochentags der API\n\n    for (let i = 0; i < res.data.list.length; i++) {\n      let apiDate = new Date(res.data.list[i].dt_txt).getDay();\n      let minTempOfDay = res.data.list[i].main.temp_min;\n      let maxTempOfDay = res.data.list[i].main.temp_max;\n      let iconOfDay = res.data.list[0].weather[0].main;\n\n      // Vergleiche die Wochentage\n      if (apiDate !== today) {\n        let dayOfWeek = daysOfWeek[apiDate];\n        // Überprüfe, ob bereits ein Eintrag für diesen Wochentag im Objekt existiert\n        if (!tempsByDay[dayOfWeek]) {\n          tempsByDay[dayOfWeek] = {\n            min: [],\n            max: [],\n            icon: \"\"\n          };\n        }\n        // Füge die Mindesttemperatur zum entsprechenden Tag hinzu\n        tempsByDay[dayOfWeek].min.push(minTempOfDay);\n        tempsByDay[dayOfWeek].max.push(maxTempOfDay);\n        if (res.data.list[i].dt_txt.slice(-8) === \"12:00:00\") {\n          tempsByDay[dayOfWeek].icon = iconOfDay;\n        }\n      }\n    }\n    console.log(\"Mindesttemperaturen für jeden Wochentag:\", tempsByDay);\n\n    // Ermitteln der kleinsten Mindesttemp und der größten Maximaltemp\n    // Iteriere über jeden Wochentag im tempsByDay-Objekt\n    for (let i = 0; i < daysOfWeek.length; i++) {\n      let day = daysOfWeek[i];\n\n      // Wenn der Tag nach dem aktuellen Tag liegt\n      if (i > today) {\n        // Finde die kleinste und größte Temperatur für den aktuellen Tag\n        let minTemp = tempsByDay[day].min[0];\n        let maxTemp = tempsByDay[day].max[0];\n        for (let temp of tempsByDay[day].min) {\n          if (temp < minTemp) {\n            minTemp = temp;\n          }\n        }\n        for (let temp of tempsByDay[day].max) {\n          if (temp > maxTemp) {\n            maxTemp = temp;\n          }\n        }\n        console.log(tempsByDay);\n\n        // Setze Usestates entsprechend der Tage\n        switch (i) {\n          case today + 1:\n            setDay2_minTemp(minTemp);\n            setDay2_maxTemp(maxTemp);\n            setDay2Name(day);\n            setDay2Image();\n            break;\n          case today + 2:\n            setDay3_minTemp(minTemp);\n            setDay3_maxTemp(maxTemp);\n            setDay3Name(day);\n            break;\n          case today + 3:\n            setDay4_minTemp(minTemp);\n            setDay4_maxTemp(maxTemp);\n            setDay4Name(day);\n            break;\n          case today + 4:\n            setDay5_minTemp(minTemp);\n            setDay5_maxTemp(maxTemp);\n            setDay5Name(day);\n            break;\n          case today + 5:\n            setDay6_minTemp(minTemp);\n            setDay6_maxTemp(maxTemp);\n            setDay6Name(day);\n            break;\n          default:\n            break;\n        }\n      }\n    }\n  }).catch(err => {\n    console.error(\"Fehler beim Abrufen der Wetterdaten:\", err);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_temp_infos\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"5-Tage-Vorhersage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container_forecast\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"forecast_day\",\n            children: \"Heute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"forecast_icon\",\n            src: image,\n            alt: \"wetter icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"minTemp\",\n            children: [Math.round(minTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(maxTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"devider_forcast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: day2_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"forecast_icon\",\n            src: \"\",\n            alt: \"wetter icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"minTemp\",\n            children: [Math.round(day2_minTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(day2_maxTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"devider_forcast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: day3_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"forecast_icon\",\n            src: day2_image,\n            alt: \"wetter icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"minTemp\",\n            children: [Math.round(day3_minTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(day3_maxTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"devider_forcast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: day4_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"forecast_icon\",\n            src: \"\",\n            alt: \"wetter icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"minTemp\",\n            children: [Math.round(day4_minTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(day4_maxTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"devider_forcast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: day5_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"forecast_icon\",\n            src: \"\",\n            alt: \"wetter icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"minTemp\",\n            children: [Math.round(day5_minTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(day5_maxTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"devider_forcast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: day6_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"forecast_icon\",\n            src: \"\",\n            alt: \"wetter icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"minTemp\",\n            children: [Math.round(day6_minTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(day6_maxTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tab\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Details, \"U5jVRDUc+bU7wsThCSf2cF9MEbY=\");\n_c = Details;\nexport default Details;\nvar _c;\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"names":["React","useState","axios","Cloud","Clear","Rain","Storm","Fog","Snow","Cloudy","jsxDEV","_jsxDEV","Fragment","_Fragment","Details","cityName","minTemp","maxTemp","image","_s","REACT_APP_API_KEY","process","env","daysOfWeek","today","Date","getDay","tempsByDay","day2_minTemp","setDay2_minTemp","day3_minTemp","setDay3_minTemp","day4_minTemp","setDay4_minTemp","day5_minTemp","setDay5_minTemp","day6_minTemp","setDay6_minTemp","day2_maxTemp","setDay2_maxTemp","day3_maxTemp","setDay3_maxTemp","day4_maxTemp","setDay4_maxTemp","day5_maxTemp","setDay5_maxTemp","day6_maxTemp","setDay6_maxTemp","day2_name","setDay2Name","day3_name","setDay3Name","day4_name","setDay4Name","day5_name","setDay5Name","day6_name","setDay6Name","day2_image","setDay2Image","apiURL","get","then","res","console","log","data","list","weather","main","imagePath","i","length","apiDate","dt_txt","minTempOfDay","temp_min","maxTempOfDay","temp_max","iconOfDay","dayOfWeek","min","max","icon","push","slice","day","temp","catch","err","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","Math","round","id","_c","$RefreshReg$"],"sources":["/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Details.js"],"sourcesContent":["// Details.js\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Cloud from \"./assets/cloud.png\";\nimport Clear from \"./assets/sun.png\";\nimport Rain from \"./assets/rainy-day.png\";\nimport Storm from \"./assets/storm.png\";\nimport Fog from \"./assets/fog.png\";\nimport Snow from \"./assets/snowy.png\";\nimport Cloudy from \"./assets/cloudy.png\";\n\nfunction Details({ cityName, minTemp, maxTemp, image }) {\n  // Zugriff auf die API-Schlüssel aus den Umgebungsvariablen\n  const { REACT_APP_API_KEY } = process.env;\n\n  // Ermitteln der Wochentage\n  let daysOfWeek = [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"];\n\n  // Index des heutigen Wochentags\n  let today = new Date().getDay();\n\n  // Objekt zum Sammeln der Mindest- und Maximaltemperaturen für jeden Tag\n  let tempsByDay = {};\n\n  const [day2_minTemp, setDay2_minTemp] = useState(\"\");\n  const [day3_minTemp, setDay3_minTemp] = useState(\"\");\n  const [day4_minTemp, setDay4_minTemp] = useState(\"\");\n  const [day5_minTemp, setDay5_minTemp] = useState(\"\");\n  const [day6_minTemp, setDay6_minTemp] = useState(\"\");\n\n  const [day2_maxTemp, setDay2_maxTemp] = useState(\"\");\n  const [day3_maxTemp, setDay3_maxTemp] = useState(\"\");\n  const [day4_maxTemp, setDay4_maxTemp] = useState(\"\");\n  const [day5_maxTemp, setDay5_maxTemp] = useState(\"\");\n  const [day6_maxTemp, setDay6_maxTemp] = useState(\"\");\n\n  const [day2_name, setDay2Name] = useState(\"\");\n  const [day3_name, setDay3Name] = useState(\"\");\n  const [day4_name, setDay4Name] = useState(\"\");\n  const [day5_name, setDay5Name] = useState(\"\");\n  const [day6_name, setDay6Name] = useState(\"\");\n\n  const [day2_image, setDay2Image] = useState(\"\");\n\n  //console.log(cityName);\n  const apiURL = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n\n  axios\n    .get(apiURL)\n    .then((res) => {\n      console.log(res.data.list);\n      console.log(res.data.list[0].weather[0].main);\n      let imagePath = \"\";\n\n      // let apiDate = new Date(res.data.list[0].dt_txt).getDay(); // Index des Wochentags der API\n\n      for (let i = 0; i < res.data.list.length; i++) {\n        let apiDate = new Date(res.data.list[i].dt_txt).getDay();\n        let minTempOfDay = res.data.list[i].main.temp_min;\n        let maxTempOfDay = res.data.list[i].main.temp_max;\n        let iconOfDay = res.data.list[0].weather[0].main;\n\n        // Vergleiche die Wochentage\n        if (apiDate !== today) {\n          let dayOfWeek = daysOfWeek[apiDate];\n          // Überprüfe, ob bereits ein Eintrag für diesen Wochentag im Objekt existiert\n          if (!tempsByDay[dayOfWeek]) {\n            tempsByDay[dayOfWeek] = { min: [], max: [], icon: \"\" };\n          }\n          // Füge die Mindesttemperatur zum entsprechenden Tag hinzu\n          tempsByDay[dayOfWeek].min.push(minTempOfDay);\n          tempsByDay[dayOfWeek].max.push(maxTempOfDay);\n\n          if (res.data.list[i].dt_txt.slice(-8) === \"12:00:00\") {\n            tempsByDay[dayOfWeek].icon = iconOfDay;\n          }\n        }\n      }\n      console.log(\"Mindesttemperaturen für jeden Wochentag:\", tempsByDay);\n\n      // Ermitteln der kleinsten Mindesttemp und der größten Maximaltemp\n      // Iteriere über jeden Wochentag im tempsByDay-Objekt\n      for (let i = 0; i < daysOfWeek.length; i++) {\n        let day = daysOfWeek[i];\n\n        // Wenn der Tag nach dem aktuellen Tag liegt\n        if (i > today) {\n          // Finde die kleinste und größte Temperatur für den aktuellen Tag\n          let minTemp = tempsByDay[day].min[0];\n          let maxTemp = tempsByDay[day].max[0];\n\n          for (let temp of tempsByDay[day].min) {\n            if (temp < minTemp) {\n              minTemp = temp;\n            }\n          }\n\n          for (let temp of tempsByDay[day].max) {\n            if (temp > maxTemp) {\n              maxTemp = temp;\n            }\n          }\n\n          console.log(tempsByDay);\n\n          // Setze Usestates entsprechend der Tage\n          switch (i) {\n            case today + 1:\n              setDay2_minTemp(minTemp);\n              setDay2_maxTemp(maxTemp);\n              setDay2Name(day);\n              setDay2Image();\n              break;\n            case today + 2:\n              setDay3_minTemp(minTemp);\n              setDay3_maxTemp(maxTemp);\n              setDay3Name(day);\n              break;\n            case today + 3:\n              setDay4_minTemp(minTemp);\n              setDay4_maxTemp(maxTemp);\n              setDay4Name(day);\n              break;\n            case today + 4:\n              setDay5_minTemp(minTemp);\n              setDay5_maxTemp(maxTemp);\n              setDay5Name(day);\n              break;\n            case today + 5:\n              setDay6_minTemp(minTemp);\n              setDay6_maxTemp(maxTemp);\n              setDay6Name(day);\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    })\n    .catch((err) => {\n      console.error(\"Fehler beim Abrufen der Wetterdaten:\", err);\n    });\n\n  return (\n    <>\n      <div className=\"container_temp_infos\">\n        <h3>5-Tage-Vorhersage</h3>\n        <div className=\"container_forecast\">\n          <div className=\"forecast_row\">\n            <p className=\"forecast_day\">Heute</p>\n            <img className=\"forecast_icon\" src={image} alt=\"wetter icon\" />\n            <p className=\"minTemp\">{Math.round(minTemp)}°C</p>\n            <p>{Math.round(maxTemp)}°C</p>\n          </div>\n          <div className=\"devider_forcast\"></div>\n          <div className=\"forecast_row\">\n            <p>{day2_name}</p>\n            <img className=\"forecast_icon\" src=\"\" alt=\"wetter icon\" />\n            <p className=\"minTemp\">{Math.round(day2_minTemp)}°C</p>\n            <p>{Math.round(day2_maxTemp)}°C</p>\n          </div>\n          <div className=\"devider_forcast\"></div>\n          <div className=\"forecast_row\">\n            <p>{day3_name}</p>\n            <img className=\"forecast_icon\" src={day2_image} alt=\"wetter icon\" />\n            <p className=\"minTemp\">{Math.round(day3_minTemp)}°C</p>\n            <p>{Math.round(day3_maxTemp)}°C</p>\n          </div>\n          <div className=\"devider_forcast\"></div>\n          <div className=\"forecast_row\">\n            <p>{day4_name}</p>\n            <img className=\"forecast_icon\" src=\"\" alt=\"wetter icon\" />\n            <p className=\"minTemp\">{Math.round(day4_minTemp)}°C</p>\n            <p>{Math.round(day4_maxTemp)}°C</p>\n          </div>\n          <div className=\"devider_forcast\"></div>\n          <div className=\"forecast_row\">\n            <p>{day5_name}</p>\n            <img className=\"forecast_icon\" src=\"\" alt=\"wetter icon\" />\n            <p className=\"minTemp\">{Math.round(day5_minTemp)}°C</p>\n            <p>{Math.round(day5_maxTemp)}°C</p>\n          </div>\n          <div className=\"devider_forcast\"></div>\n          <div className=\"forecast_row\">\n            <p>{day6_name}</p>\n            <img className=\"forecast_icon\" src=\"\" alt=\"wetter icon\" />\n            <p className=\"minTemp\">{Math.round(day6_minTemp)}°C</p>\n            <p>{Math.round(day6_maxTemp)}°C</p>\n          </div>\n        </div>\n        <div id=\"tab\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default Details;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}