{"ast":null,"code":"import\"../style.css\";import Cloud from\"./assets/cloud.png\";import Clear from\"./assets/sun.png\";import Rain from\"./assets/rainy-day.png\";import Storm from\"./assets/storm.png\";import Fog from\"./assets/fog.png\";import Snow from\"./assets/snowy.png\";import Humidity from\"./assets/weather.png\";import Wind from\"./assets/wind.png\";import Stars from\"./assets/moon.png\";import Cloudy from\"./assets/cloudy.png\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Home(){const{REACT_APP_API_KEY}=process.env;const[data,setData]=useState({celsius:10,name:\"Suche Stadt\",humidity:10,speed:2,image:Cloud,feel:10,sunrise:0,sunset:0,descripiton:\"\"});const[name,setName]=useState(\"\");const[error,setError]=useState(\"\");const[isNight,setIsNight]=useState(false);// falls geolocation vom user erlaubt:\nuseEffect(()=>{navigator.geolocation.getCurrentPosition(zeigePosition);},[isNight]);//  array als abhängigkeit => Effekt wird erneut gerender\n// koordinaten speichern zur Abfrage der stadt\nfunction zeigePosition(position){const lat=position.coords.latitude;const lon=position.coords.longitude;const apiURL=\"https://api.openweathermap.org/geo/1.0/reverse?lat=\".concat(lat,\"&lon=\").concat(lon,\"&appid=\").concat(REACT_APP_API_KEY);axios.get(apiURL).then(res=>{const city=res.data[0].name;// übergabe der ermittelten stadt aus geolocation an fetchData\nfetchData(city);}).catch(err=>{if(err.response.status===404){setError(\"Invalid City Name\");}else{setError(\"\");}// console.log(err);\n});}// definition der fetchData fkt\nfunction fetchData(cityName){const apiURL=\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(cityName,\"&appid=\").concat(REACT_APP_API_KEY,\"&units=metric&lang=de\");axios.get(apiURL).then(res=>{let imagePath=\"\";console.log(res.data);// Ermittlung ob Tag oder Nacht anhand der gelieferten Zeiten aus der API\nfunction dayOrNight(){let sunset=res.data.sys.sunset;let currentTime=Math.floor(Date.now()/1000);if(currentTime>=sunset){console.log(\"Die Sonne ist bereits untergegangen.\");setIsNight(true);// Setze den Nachtstatus auf true\n}else{console.log(\"Die Sonne ist noch nicht untergegangen.\");setIsNight(false);// Setze den Nachtstatus auf false\n}}dayOrNight();if(isNight){document.querySelector(\".weather\").classList.add(\"night\");//hintergrundfarbe in dunkel ändern\nif(res.data.weather[0].main===\"Clouds\"){imagePath=Cloud;}else if(res.data.weather[0].main===\"Clear\"){imagePath=Stars;}else if(res.data.weather[0].main===\"Rain\"){imagePath=Rain;}else if(res.data.weather[0].main===\"Drizzle\"){imagePath=Rain;}else if(res.data.weather[0].main===\"Mist\"){imagePath=Fog;}else if(res.data.weather[0].main===\"Snow\"){imagePath=Snow;}else if(res.data.weather[0].main===\"Thunderstorm\"){imagePath=Storm;}else{imagePath=Cloudy;}}else{// Tagsüber, behalte den Hintergrund und Bilder bei oder ändere sie entsprechend\ndocument.querySelector(\".weather\").classList.remove(\"night\");if(res.data.weather[0].main===\"Clouds\"){imagePath=Cloud;}else if(res.data.weather[0].main===\"Clear\"){imagePath=Clear;}else if(res.data.weather[0].main===\"Rain\"){imagePath=Rain;}else if(res.data.weather[0].main===\"Drizzle\"){imagePath=Rain;}else if(res.data.weather[0].main===\"Mist\"){imagePath=Fog;}else if(res.data.weather[0].main===\"Snow\"){imagePath=Snow;}else if(res.data.weather[0].main===\"Thunderstorm\"){imagePath=Storm;}else{imagePath=Cloudy;}}setData({...data,// kopiere vorhandene daten und aktualisiere\ncelsius:res.data.main.temp,name:res.data.name,humidity:res.data.main.humidity,speed:res.data.wind.speed,image:imagePath,feel:res.data.main.feels_like,sunrise:res.data.sys.sunrise,sunset:res.data.sys.sunset,descripiton:res.data.weather[0].description});setError(\"\");}).catch(err=>{if(err.response.status===404){setError(\"Invalid City Name\");}else{setError(\"\");}console.log(err);});}const handleClick=()=>{if(name!==\"\"){fetchData(name);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"current_lo\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"night_shift\",className:\"weather\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"input\",type:\"text\",placeholder:\"Enter City Name\"// update die stadt im name / setname usestate\n,onChange:e=>setName(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClick,children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-magnifying-glass\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"winfo\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:/*#__PURE__*/_jsx(\"p\",{children:error})}),/*#__PURE__*/_jsx(\"img\",{src:data.image,alt:\"cloud\"}),/*#__PURE__*/_jsxs(\"h1\",{children:[Math.round(data.celsius),\"\\xB0C\"]}),/*#__PURE__*/_jsx(\"h2\",{children:data.name}),/*#__PURE__*/_jsx(\"p\",{className:\"description\",children:data.descripiton}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:Humidity,alt:\"humidity\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(data.humidity),\"%\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Humidity\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:Wind,alt:\"wind\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(data.speed),\"km/h\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Wind\"})]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"copyright-mobil\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://www.flaticon.com/free-icons/weather\",title:\"weather icons\",children:\"Weather icons created by iconixar - Flaticon\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"copyright\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://www.flaticon.com/free-icons/weather\",title:\"weather icons\",children:\"Weather icons created by iconixar - Flaticon\"})})]});}export default Home;","map":{"version":3,"names":["Cloud","Clear","Rain","Storm","Fog","Snow","Humidity","Wind","Stars","Cloudy","React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Home","REACT_APP_API_KEY","process","env","data","setData","celsius","name","humidity","speed","image","feel","sunrise","sunset","descripiton","setName","error","setError","isNight","setIsNight","navigator","geolocation","getCurrentPosition","zeigePosition","position","lat","coords","latitude","lon","longitude","apiURL","concat","get","then","res","city","fetchData","catch","err","response","status","cityName","imagePath","console","log","dayOrNight","sys","currentTime","Math","floor","Date","now","document","querySelector","classList","add","weather","main","remove","temp","wind","feels_like","description","handleClick","className","children","id","type","placeholder","onChange","e","target","value","onClick","src","alt","round","href","title"],"sources":["/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Home.js"],"sourcesContent":["import \"../style.css\";\nimport Cloud from \"./assets/cloud.png\";\nimport Clear from \"./assets/sun.png\";\nimport Rain from \"./assets/rainy-day.png\";\nimport Storm from \"./assets/storm.png\";\nimport Fog from \"./assets/fog.png\";\nimport Snow from \"./assets/snowy.png\";\nimport Humidity from \"./assets/weather.png\";\nimport Wind from \"./assets/wind.png\";\nimport Stars from \"./assets/moon.png\";\nimport Cloudy from \"./assets/cloudy.png\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Home() {\n  const { REACT_APP_API_KEY } = process.env;\n\n  const [data, setData] = useState({\n    celsius: 10,\n    name: \"Suche Stadt\",\n    humidity: 10,\n    speed: 2,\n    image: Cloud,\n    feel: 10,\n    sunrise: 0,\n    sunset: 0,\n    descripiton: \"\",\n  });\n\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isNight, setIsNight] = useState(false);\n\n  // falls geolocation vom user erlaubt:\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(zeigePosition);\n  }, [isNight]); //  array als abhängigkeit => Effekt wird erneut gerender\n\n  // koordinaten speichern zur Abfrage der stadt\n  function zeigePosition(position) {\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n\n    const apiURL = `https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&appid=${REACT_APP_API_KEY}`;\n\n    axios\n      .get(apiURL)\n      .then((res) => {\n        const city = res.data[0].name;\n        // übergabe der ermittelten stadt aus geolocation an fetchData\n        fetchData(city);\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          setError(\"Invalid City Name\");\n        } else {\n          setError(\"\");\n        }\n        // console.log(err);\n      });\n  }\n\n  // definition der fetchData fkt\n  function fetchData(cityName) {\n    const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n\n    axios\n      .get(apiURL)\n      .then((res) => {\n        let imagePath = \"\";\n        console.log(res.data);\n\n        // Ermittlung ob Tag oder Nacht anhand der gelieferten Zeiten aus der API\n        function dayOrNight() {\n          let sunset = res.data.sys.sunset;\n          let currentTime = Math.floor(Date.now() / 1000);\n          if (currentTime >= sunset) {\n            console.log(\"Die Sonne ist bereits untergegangen.\");\n            setIsNight(true); // Setze den Nachtstatus auf true\n          } else {\n            console.log(\"Die Sonne ist noch nicht untergegangen.\");\n            setIsNight(false); // Setze den Nachtstatus auf false\n          }\n        }\n\n        dayOrNight();\n\n        if (isNight) {\n          document.querySelector(\".weather\").classList.add(\"night\");\n          //hintergrundfarbe in dunkel ändern\n          if (res.data.weather[0].main === \"Clouds\") {\n            imagePath = Cloud;\n          } else if (res.data.weather[0].main === \"Clear\") {\n            imagePath = Stars;\n          } else if (res.data.weather[0].main === \"Rain\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Drizzle\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Mist\") {\n            imagePath = Fog;\n          } else if (res.data.weather[0].main === \"Snow\") {\n            imagePath = Snow;\n          } else if (res.data.weather[0].main === \"Thunderstorm\") {\n            imagePath = Storm;\n          } else {\n            imagePath = Cloudy;\n          }\n        } else {\n          // Tagsüber, behalte den Hintergrund und Bilder bei oder ändere sie entsprechend\n          document.querySelector(\".weather\").classList.remove(\"night\");\n          if (res.data.weather[0].main === \"Clouds\") {\n            imagePath = Cloud;\n          } else if (res.data.weather[0].main === \"Clear\") {\n            imagePath = Clear;\n          } else if (res.data.weather[0].main === \"Rain\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Drizzle\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Mist\") {\n            imagePath = Fog;\n          } else if (res.data.weather[0].main === \"Snow\") {\n            imagePath = Snow;\n          } else if (res.data.weather[0].main === \"Thunderstorm\") {\n            imagePath = Storm;\n          } else {\n            imagePath = Cloudy;\n          }\n        }\n\n        setData({\n          ...data, // kopiere vorhandene daten und aktualisiere\n          celsius: res.data.main.temp,\n          name: res.data.name,\n          humidity: res.data.main.humidity,\n          speed: res.data.wind.speed,\n          image: imagePath,\n          feel: res.data.main.feels_like,\n          sunrise: res.data.sys.sunrise,\n          sunset: res.data.sys.sunset,\n          descripiton: res.data.weather[0].description,\n        });\n        setError(\"\");\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          setError(\"Invalid City Name\");\n        } else {\n          setError(\"\");\n        }\n        console.log(err);\n      });\n  }\n\n  const handleClick = () => {\n    if (name !== \"\") {\n      fetchData(name);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"current_lo\"></div>\n      <div id=\"night_shift\" className=\"weather\">\n        <div className=\"search\">\n          <input\n            id=\"input\"\n            type=\"text\"\n            placeholder=\"Enter City Name\"\n            // update die stadt im name / setname usestate\n            onChange={(e) => setName(e.target.value)}\n          />\n          <button onClick={handleClick}>\n            <i className=\"fa-solid fa-magnifying-glass\"></i>\n          </button>\n        </div>\n        <div className=\"winfo\">\n          <div className=\"error\">\n            <p>{error}</p>\n          </div>\n          <img src={data.image} alt=\"cloud\" />\n          <h1>{Math.round(data.celsius)}°C</h1>\n          <h2>{data.name}</h2>\n          <p className=\"description\">{data.descripiton}</p>\n          <div className=\"details\">\n            <div className=\"col\">\n              <div>\n                <img src={Humidity} alt=\"humidity\" />\n              </div>\n              <div>\n                <p>{Math.round(data.humidity)}%</p>\n                <p>Humidity</p>\n              </div>\n            </div>\n            <div className=\"col\">\n              <div>\n                <img src={Wind} alt=\"wind\" />\n              </div>\n              <div>\n                <p>{Math.round(data.speed)}km/h</p>\n                <p>Wind</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"copyright-mobil\">\n          <a\n            href=\"https://www.flaticon.com/free-icons/weather\"\n            title=\"weather icons\"\n          >\n            Weather icons created by iconixar - Flaticon\n          </a>\n        </div>\n      </div>\n      <div className=\"copyright\">\n        <a\n          href=\"https://www.flaticon.com/free-icons/weather\"\n          title=\"weather icons\"\n        >\n          Weather icons created by iconixar - Flaticon\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}