{"ast":null,"code":"var _jsxFileName = \"/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Home.js\",\n  _s = $RefreshSig$();\nimport \"../style.css\";\nimport Cloud from \"./assets/cloud.png\";\nimport Clear from \"./assets/sun.png\";\nimport Rain from \"./assets/rainy-day.png\";\nimport Storm from \"./assets/storm.png\";\nimport Fog from \"./assets/fog.png\";\nimport Snow from \"./assets/snowy.png\";\nimport Humidity from \"./assets/weather.png\";\nimport Wind from \"./assets/wind.png\";\nimport Stars from \"./assets/moon.png\";\nimport Cloudy from \"./assets/cloudy.png\";\nimport Feel from \"./assets/thermometer.png\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Details from \"./Details\";\n\n// Definition der Home-Komponente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  // Zugriff auf die API-Schlüssel aus den Umgebungsvariablen\n  const {\n    REACT_APP_API_KEY\n  } = process.env;\n\n  // Zustände für die Wetterdaten, die Eingabestadt und Fehlermeldungen\n  const [data, setData] = useState({\n    celsius: 10,\n    name: \"Suche Stadt...\",\n    humidity: 10,\n    speed: 2,\n    image: Cloud,\n    feel: 10,\n    sunrise: 0,\n    sunset: 0,\n    description: \"\"\n  });\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // Zustand, um zu überprüfen, ob es Nacht ist\n  const [isNight, setIsNight] = useState(false);\n  // Zustand, um zu überprüfen, ob bereits eine Stadt abgerufen wurde\n  const [cityFetched, setCityFetched] = useState(false);\n  const [cityName, setCityName] = useState(\"\"); // Neuer Zustand für die Stadt\n\n  // Effekt, um die Geolokalisierung auszuführen, wenn keine Stadt abgerufen wurde\n  useEffect(() => {\n    if (!cityFetched && name === \"\") {\n      navigator.geolocation.getCurrentPosition(zeigePosition);\n    }\n  }, [name, cityFetched]);\n\n  // // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n  // useEffect(() => {\n  //   navigator.geolocation.getCurrentPosition(zeigePosition);\n  //   fetchData(data.name); // Hier rufen wir die API für die Stadt an, die bereits abgerufen wurde\n  // }, [isNight]);\n\n  // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n  useEffect(() => {\n    if (cityFetched) {\n      fetchData(data.name); // Hier rufen wir die API für die Stadt an, die bereits abgerufen wurde\n    }\n  }, [isNight]);\n\n  // Funktion zur Verarbeitung der Geolokalisierungsdaten\n  function zeigePosition(position) {\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n    const apiURL = `https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&appid=${REACT_APP_API_KEY}`;\n    axios.get(apiURL).then(res => {\n      const cityName = res.data[0].name;\n      setCityName(cityName); // Aktualisierung des Stadt-Zustands\n      fetchData(cityName);\n      setCityFetched(true);\n    }).catch(err => {\n      if (err.response.status === 404) {\n        setError(\"Invalid City Name\");\n      } else {\n        setError(\"\");\n      }\n    });\n  }\n\n  // Funktion zum Abrufen von Wetterdaten basierend auf dem Stadtnamen\n  function fetchData(cityName) {\n    const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n    axios.get(apiURL).then(res => {\n      let imagePath = \"\";\n\n      // Bestimmung von Tag oder Nacht\n\n      const sunriseTime = res.data.sys.sunrise;\n      const sunsetTime = res.data.sys.sunset;\n      let currentTime = Math.floor(Date.now() / 1000);\n      const night = currentTime >= sunsetTime || currentTime < sunriseTime;\n      setIsNight(night);\n      if (night) {\n        document.querySelector(\".weather\").classList.add(\"night\");\n        if (res.data.weather[0].main === \"Clouds\") {\n          imagePath = Cloud;\n        } else if (res.data.weather[0].main === \"Clear\") {\n          imagePath = Stars;\n        } else if (res.data.weather[0].main === \"Rain\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Drizzle\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Mist\") {\n          imagePath = Fog;\n        } else if (res.data.weather[0].main === \"Snow\") {\n          imagePath = Snow;\n        } else if (res.data.weather[0].main === \"Thunderstorm\") {\n          imagePath = Storm;\n        } else {\n          imagePath = Cloudy;\n        }\n      } else {\n        document.querySelector(\".weather\").classList.remove(\"night\");\n        if (res.data.weather[0].main === \"Clouds\") {\n          imagePath = Cloud;\n        } else if (res.data.weather[0].main === \"Clear\") {\n          imagePath = Clear;\n        } else if (res.data.weather[0].main === \"Rain\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Drizzle\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Mist\") {\n          imagePath = Fog;\n        } else if (res.data.weather[0].main === \"Snow\") {\n          imagePath = Snow;\n        } else if (res.data.weather[0].main === \"Thunderstorm\") {\n          imagePath = Storm;\n        } else {\n          imagePath = Cloudy;\n        }\n      }\n      setData({\n        ...data,\n        celsius: res.data.main.temp,\n        name: res.data.name,\n        humidity: res.data.main.humidity,\n        speed: res.data.wind.speed,\n        image: imagePath,\n        feel: res.data.main.feels_like,\n        sunrise: res.data.sys.sunrise,\n        sunset: res.data.sys.sunset,\n        description: res.data.weather[0].description\n      });\n      setError(\"\");\n    }).catch(err => {\n      if (err.response.status === 404) {\n        setError(\"Invalid City Name\");\n      } else {\n        setError(\"\");\n      }\n    });\n  }\n\n  // Funktion zum Verarbeiten von Klickereignissen\n  const handleClick = () => {\n    setCityFetched(false); // Setzen des Zustands, um sicherzustellen, dass die Geolokalisierung erneut durchgeführt wird\n    if (name !== \"\") {\n      fetchData(name);\n    }\n  };\n\n  // Rückgabe der JSX-Struktur der Home-Komponente\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current_lo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"night_shift\",\n      className: \"weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input\",\n          type: \"text\",\n          placeholder: \"Enter City Name\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-magnifying-glass\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: data.image,\n          alt: \"cloud\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [Math.round(data.celsius), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: data.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Feel,\n                alt: \"humidity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [Math.round(data.feel), \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Gef\\xFChlt wie\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Wind,\n                alt: \"wind\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [Math.round(data.speed), \"km/h\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Wind\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Humidity,\n                alt: \"feels like\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [Math.round(data.humidity), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Luftfeuchtigkeit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Details, {\n          cityName: cityName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"copyright-mobil\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.flaticon.com/free-icons/weather\",\n          title: \"weather icons\",\n          children: \"Weather icons created by iconixar - Flaticon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"copyright\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.flaticon.com/free-icons/weather\",\n        title: \"weather icons\",\n        children: \"Weather icons created by iconixar - Flaticon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n\n// Export der Home-Komponente als Standard\n_s(Home, \"6z+FkfCuXH8E4P5A2tozABLpxx8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Cloud","Clear","Rain","Storm","Fog","Snow","Humidity","Wind","Stars","Cloudy","Feel","React","useState","useEffect","axios","Details","jsxDEV","_jsxDEV","Home","_s","REACT_APP_API_KEY","process","env","data","setData","celsius","name","humidity","speed","image","feel","sunrise","sunset","description","setName","error","setError","isNight","setIsNight","cityFetched","setCityFetched","cityName","setCityName","navigator","geolocation","getCurrentPosition","zeigePosition","fetchData","position","lat","coords","latitude","lon","longitude","apiURL","get","then","res","catch","err","response","status","imagePath","sunriseTime","sys","sunsetTime","currentTime","Math","floor","Date","now","night","document","querySelector","classList","add","weather","main","remove","temp","wind","feels_like","handleClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","onChange","e","target","value","onClick","src","alt","round","href","title","_c","$RefreshReg$"],"sources":["/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Home.js"],"sourcesContent":["import \"../style.css\";\nimport Cloud from \"./assets/cloud.png\";\nimport Clear from \"./assets/sun.png\";\nimport Rain from \"./assets/rainy-day.png\";\nimport Storm from \"./assets/storm.png\";\nimport Fog from \"./assets/fog.png\";\nimport Snow from \"./assets/snowy.png\";\nimport Humidity from \"./assets/weather.png\";\nimport Wind from \"./assets/wind.png\";\nimport Stars from \"./assets/moon.png\";\nimport Cloudy from \"./assets/cloudy.png\";\nimport Feel from \"./assets/thermometer.png\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Details from \"./Details\";\n\n// Definition der Home-Komponente\nfunction Home() {\n  // Zugriff auf die API-Schlüssel aus den Umgebungsvariablen\n  const { REACT_APP_API_KEY } = process.env;\n\n  // Zustände für die Wetterdaten, die Eingabestadt und Fehlermeldungen\n  const [data, setData] = useState({\n    celsius: 10,\n    name: \"Suche Stadt...\",\n    humidity: 10,\n    speed: 2,\n    image: Cloud,\n    feel: 10,\n    sunrise: 0,\n    sunset: 0,\n    description: \"\",\n  });\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // Zustand, um zu überprüfen, ob es Nacht ist\n  const [isNight, setIsNight] = useState(false);\n  // Zustand, um zu überprüfen, ob bereits eine Stadt abgerufen wurde\n  const [cityFetched, setCityFetched] = useState(false);\n  const [cityName, setCityName] = useState(\"\"); // Neuer Zustand für die Stadt\n\n  // Effekt, um die Geolokalisierung auszuführen, wenn keine Stadt abgerufen wurde\n  useEffect(() => {\n    if (!cityFetched && name === \"\") {\n      navigator.geolocation.getCurrentPosition(zeigePosition);\n    }\n  }, [name, cityFetched]);\n\n  // // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n  // useEffect(() => {\n  //   navigator.geolocation.getCurrentPosition(zeigePosition);\n  //   fetchData(data.name); // Hier rufen wir die API für die Stadt an, die bereits abgerufen wurde\n  // }, [isNight]);\n\n  // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n  useEffect(() => {\n    if (cityFetched) {\n      fetchData(data.name); // Hier rufen wir die API für die Stadt an, die bereits abgerufen wurde\n    }\n  }, [isNight]);\n\n  // Funktion zur Verarbeitung der Geolokalisierungsdaten\n  function zeigePosition(position) {\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n\n    const apiURL = `https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&appid=${REACT_APP_API_KEY}`;\n\n    axios\n      .get(apiURL)\n      .then((res) => {\n        const cityName = res.data[0].name;\n        setCityName(cityName); // Aktualisierung des Stadt-Zustands\n        fetchData(cityName);\n        setCityFetched(true);\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          setError(\"Invalid City Name\");\n        } else {\n          setError(\"\");\n        }\n      });\n  }\n\n  // Funktion zum Abrufen von Wetterdaten basierend auf dem Stadtnamen\n  function fetchData(cityName) {\n    const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n\n    axios\n      .get(apiURL)\n      .then((res) => {\n        let imagePath = \"\";\n\n        // Bestimmung von Tag oder Nacht\n\n        const sunriseTime = res.data.sys.sunrise;\n        const sunsetTime = res.data.sys.sunset;\n        let currentTime = Math.floor(Date.now() / 1000);\n        const night = currentTime >= sunsetTime || currentTime < sunriseTime;\n        setIsNight(night);\n\n        if (night) {\n          document.querySelector(\".weather\").classList.add(\"night\");\n          if (res.data.weather[0].main === \"Clouds\") {\n            imagePath = Cloud;\n          } else if (res.data.weather[0].main === \"Clear\") {\n            imagePath = Stars;\n          } else if (res.data.weather[0].main === \"Rain\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Drizzle\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Mist\") {\n            imagePath = Fog;\n          } else if (res.data.weather[0].main === \"Snow\") {\n            imagePath = Snow;\n          } else if (res.data.weather[0].main === \"Thunderstorm\") {\n            imagePath = Storm;\n          } else {\n            imagePath = Cloudy;\n          }\n        } else {\n          document.querySelector(\".weather\").classList.remove(\"night\");\n          if (res.data.weather[0].main === \"Clouds\") {\n            imagePath = Cloud;\n          } else if (res.data.weather[0].main === \"Clear\") {\n            imagePath = Clear;\n          } else if (res.data.weather[0].main === \"Rain\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Drizzle\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Mist\") {\n            imagePath = Fog;\n          } else if (res.data.weather[0].main === \"Snow\") {\n            imagePath = Snow;\n          } else if (res.data.weather[0].main === \"Thunderstorm\") {\n            imagePath = Storm;\n          } else {\n            imagePath = Cloudy;\n          }\n        }\n\n        setData({\n          ...data,\n          celsius: res.data.main.temp,\n          name: res.data.name,\n          humidity: res.data.main.humidity,\n          speed: res.data.wind.speed,\n          image: imagePath,\n          feel: res.data.main.feels_like,\n          sunrise: res.data.sys.sunrise,\n          sunset: res.data.sys.sunset,\n          description: res.data.weather[0].description,\n        });\n        setError(\"\");\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          setError(\"Invalid City Name\");\n        } else {\n          setError(\"\");\n        }\n      });\n  }\n\n  // Funktion zum Verarbeiten von Klickereignissen\n  const handleClick = () => {\n    setCityFetched(false); // Setzen des Zustands, um sicherzustellen, dass die Geolokalisierung erneut durchgeführt wird\n    if (name !== \"\") {\n      fetchData(name);\n    }\n  };\n\n  // Rückgabe der JSX-Struktur der Home-Komponente\n  return (\n    <div className=\"container\">\n      <div className=\"current_lo\"></div>\n      <div id=\"night_shift\" className=\"weather\">\n        <div className=\"search\">\n          <input\n            id=\"input\"\n            type=\"text\"\n            placeholder=\"Enter City Name\"\n            onChange={(e) => setName(e.target.value)}\n          />\n          <button onClick={handleClick}>\n            <i className=\"fa-solid fa-magnifying-glass\"></i>\n          </button>\n        </div>\n        <div className=\"winfo\">\n          <div className=\"error\">\n            <p>{error}</p>\n          </div>\n          <img src={data.image} alt=\"cloud\" />\n          <h1>{Math.round(data.celsius)}°C</h1>\n          <h2>{data.name}</h2>\n          <p className=\"description\">{data.description}</p>\n          <div className=\"details\">\n            <div className=\"col\">\n              <div>\n                <img src={Feel} alt=\"humidity\" />\n              </div>\n              <div>\n                <p>{Math.round(data.feel)}°C</p>\n                <p>Gefühlt wie</p>\n              </div>\n            </div>\n            <div className=\"col\">\n              <div>\n                <img src={Wind} alt=\"wind\" />\n              </div>\n              <div>\n                <p>{Math.round(data.speed)}km/h</p>\n                <p>Wind</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"details\">\n            <div className=\"col\">\n              <div>\n                <img src={Humidity} alt=\"feels like\" />\n              </div>\n              <div>\n                <p>{Math.round(data.humidity)}%</p>\n                <p>Luftfeuchtigkeit</p>\n              </div>\n            </div>\n          </div>\n          <Details cityName={cityName} />\n        </div>\n        <div className=\"copyright-mobil\">\n          <a\n            href=\"https://www.flaticon.com/free-icons/weather\"\n            title=\"weather icons\"\n          >\n            Weather icons created by iconixar - Flaticon\n          </a>\n        </div>\n      </div>\n      <div className=\"copyright\">\n        <a\n          href=\"https://www.flaticon.com/free-icons/weather\"\n          title=\"weather icons\"\n        >\n          Weather icons created by iconixar - Flaticon\n        </a>\n      </div>\n    </div>\n  );\n}\n\n// Export der Home-Komponente als Standard\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}