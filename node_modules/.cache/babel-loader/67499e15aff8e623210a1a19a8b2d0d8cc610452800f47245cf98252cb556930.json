{"ast":null,"code":"var _jsxFileName = \"/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Home.js\",\n  _s = $RefreshSig$();\nimport \"../style.css\";\nimport Cloud from \"./assets/cloud.png\";\nimport Clear from \"./assets/sun.png\";\nimport Rain from \"./assets/rainy-day.png\";\nimport Storm from \"./assets/storm.png\";\nimport Fog from \"./assets/fog.png\";\nimport Snow from \"./assets/snowy.png\";\nimport Humidity from \"./assets/weather.png\";\nimport Wind from \"./assets/wind.png\";\nimport Stars from \"./assets/moon.png\";\nimport Cloudy from \"./assets/cloudy.png\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const {\n    REACT_APP_API_KEY\n  } = process.env;\n  const [data, setData] = useState({\n    celsius: 10,\n    name: \"Suche Stadt\",\n    humidity: 10,\n    speed: 2,\n    image: Cloud,\n    feel: 10,\n    sunrise: 0,\n    sunset: 0,\n    description: \"\"\n  });\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isNight, setIsNight] = useState(false);\n\n  // falls geolocation vom user erlaubt:\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(zeigePosition);\n  }, []); // leeres array als abhängigkeit => Effekt wird nur einmalig nach dem ersten rendern ausgeführt\n\n  // koordinaten speichern zur Abfrage der stadt\n  function zeigePosition(position) {\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n    const apiURL = `https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&appid=${REACT_APP_API_KEY}`;\n    axios.get(apiURL).then(res => {\n      const city = res.data[0].name;\n      // übergabe der ermittelten stadt aus geolocation an fetchData\n      fetchData(city);\n    }).catch(err => {\n      if (err.response.status === 404) {\n        setError(\"Invalid City Name\");\n      } else {\n        setError(\"\");\n      }\n      // console.log(err);\n    });\n  }\n\n  // definition der fetchData fkt\n  function fetchData(cityName) {\n    const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n    axios.get(apiURL).then(res => {\n      let imagePath = \"\";\n      console.log(res.data);\n\n      // Ermittlung ob Tag oder Nacht anhand der gelieferten Zeiten aus der API\n      function dayOrNight() {\n        let sunset = res.data.sys.sunset;\n        let currentTime = Math.floor(Date.now() / 1000);\n        if (currentTime >= sunset) {\n          console.log(\"Die Sonne ist bereits untergegangen.\");\n          setIsNight(true); // Setze den Nachtstatus auf true\n        } else {\n          console.log(\"Die Sonne ist noch nicht untergegangen.\");\n          setIsNight(false); // Setze den Nachtstatus auf false\n        }\n      }\n      dayOrNight();\n      if (isNight) {\n        document.querySelector(\".weather\").classList.add(\"night\");\n        //hintergrundfarbe in dunkel ändern\n        if (res.data.weather[0].main === \"Clouds\") {\n          imagePath = Cloud;\n        } else if (res.data.weather[0].main === \"Clear\") {\n          imagePath = Stars;\n        } else if (res.data.weather[0].main === \"Rain\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Drizzle\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Mist\") {\n          imagePath = Fog;\n        } else if (res.data.weather[0].main === \"Snow\") {\n          imagePath = Snow;\n        } else if (res.data.weather[0].main === \"Thunderstorm\") {\n          imagePath = Storm;\n        } else {\n          imagePath = Cloudy;\n        }\n      } else {\n        // Tagsüber, behalte den Hintergrund und Bilder bei oder ändere sie entsprechend\n        document.querySelector(\".weather\").classList.remove(\"night\");\n        if (res.data.weather[0].main === \"Clouds\") {\n          imagePath = Cloud;\n        } else if (res.data.weather[0].main === \"Clear\") {\n          imagePath = Clear;\n        } else if (res.data.weather[0].main === \"Rain\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Drizzle\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Mist\") {\n          imagePath = Fog;\n        } else if (res.data.weather[0].main === \"Snow\") {\n          imagePath = Snow;\n        } else if (res.data.weather[0].main === \"Thunderstorm\") {\n          imagePath = Storm;\n        } else {\n          imagePath = Cloudy;\n        }\n      }\n      setData({\n        ...data,\n        // kopiere vorhandene daten und aktualisiere\n        celsius: res.data.main.temp,\n        name: res.data.name,\n        humidity: res.data.main.humidity,\n        speed: res.data.wind.speed,\n        image: imagePath,\n        feel: res.data.main.feels_like,\n        sunrise: res.data.sys.sunrise,\n        sunset: res.data.sys.sunset\n        // description: res.data.wheater[0].description,\n      });\n      setError(\"\");\n    }).catch(err => {\n      if (err.response.status === 404) {\n        setError(\"Invalid City Name\");\n      } else {\n        setError(\"\");\n      }\n      console.log(err);\n    });\n  }\n  const handleClick = () => {\n    if (name !== \"\") {\n      fetchData(name);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current_lo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input\",\n          type: \"text\",\n          placeholder: \"Enter City Name\"\n          // update die stadt im name / setname usestate\n          ,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-magnifying-glass\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: data.image,\n          alt: \"cloud\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [Math.round(data.celsius), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Humidity,\n                alt: \"humidity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [Math.round(data.humidity), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Humidity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Wind,\n                alt: \"wind\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [Math.round(data.speed), \"km/h\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Wind\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"copyright-mobil\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.flaticon.com/free-icons/weather\",\n          title: \"weather icons\",\n          children: \"Weather icons created by iconixar - Flaticon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"copyright\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.flaticon.com/free-icons/weather\",\n        title: \"weather icons\",\n        children: \"Weather icons created by iconixar - Flaticon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"atTJRjd4bLtwYKkj4JCiS7ywy7M=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Cloud","Clear","Rain","Storm","Fog","Snow","Humidity","Wind","Stars","Cloudy","React","useState","useEffect","axios","jsxDEV","_jsxDEV","Home","_s","REACT_APP_API_KEY","process","env","data","setData","celsius","name","humidity","speed","image","feel","sunrise","sunset","description","setName","error","setError","isNight","setIsNight","navigator","geolocation","getCurrentPosition","zeigePosition","position","lat","coords","latitude","lon","longitude","apiURL","get","then","res","city","fetchData","catch","err","response","status","cityName","imagePath","console","log","dayOrNight","sys","currentTime","Math","floor","Date","now","document","querySelector","classList","add","weather","main","remove","temp","wind","feels_like","handleClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","onChange","e","target","value","onClick","src","alt","round","href","title","_c","$RefreshReg$"],"sources":["/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Home.js"],"sourcesContent":["import \"../style.css\";\nimport Cloud from \"./assets/cloud.png\";\nimport Clear from \"./assets/sun.png\";\nimport Rain from \"./assets/rainy-day.png\";\nimport Storm from \"./assets/storm.png\";\nimport Fog from \"./assets/fog.png\";\nimport Snow from \"./assets/snowy.png\";\nimport Humidity from \"./assets/weather.png\";\nimport Wind from \"./assets/wind.png\";\nimport Stars from \"./assets/moon.png\";\nimport Cloudy from \"./assets/cloudy.png\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Home() {\n  const { REACT_APP_API_KEY } = process.env;\n\n  const [data, setData] = useState({\n    celsius: 10,\n    name: \"Suche Stadt\",\n    humidity: 10,\n    speed: 2,\n    image: Cloud,\n    feel: 10,\n    sunrise: 0,\n    sunset: 0,\n    description: \"\",\n  });\n\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isNight, setIsNight] = useState(false);\n\n  // falls geolocation vom user erlaubt:\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(zeigePosition);\n  }, []); // leeres array als abhängigkeit => Effekt wird nur einmalig nach dem ersten rendern ausgeführt\n\n  // koordinaten speichern zur Abfrage der stadt\n  function zeigePosition(position) {\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n\n    const apiURL = `https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&appid=${REACT_APP_API_KEY}`;\n\n    axios\n      .get(apiURL)\n      .then((res) => {\n        const city = res.data[0].name;\n        // übergabe der ermittelten stadt aus geolocation an fetchData\n        fetchData(city);\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          setError(\"Invalid City Name\");\n        } else {\n          setError(\"\");\n        }\n        // console.log(err);\n      });\n  }\n\n  // definition der fetchData fkt\n  function fetchData(cityName) {\n    const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n\n    axios\n      .get(apiURL)\n      .then((res) => {\n        let imagePath = \"\";\n        console.log(res.data);\n\n        // Ermittlung ob Tag oder Nacht anhand der gelieferten Zeiten aus der API\n        function dayOrNight() {\n          let sunset = res.data.sys.sunset;\n          let currentTime = Math.floor(Date.now() / 1000);\n          if (currentTime >= sunset) {\n            console.log(\"Die Sonne ist bereits untergegangen.\");\n            setIsNight(true); // Setze den Nachtstatus auf true\n          } else {\n            console.log(\"Die Sonne ist noch nicht untergegangen.\");\n            setIsNight(false); // Setze den Nachtstatus auf false\n          }\n        }\n\n        dayOrNight();\n\n        if (isNight) {\n          document.querySelector(\".weather\").classList.add(\"night\");\n          //hintergrundfarbe in dunkel ändern\n          if (res.data.weather[0].main === \"Clouds\") {\n            imagePath = Cloud;\n          } else if (res.data.weather[0].main === \"Clear\") {\n            imagePath = Stars;\n          } else if (res.data.weather[0].main === \"Rain\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Drizzle\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Mist\") {\n            imagePath = Fog;\n          } else if (res.data.weather[0].main === \"Snow\") {\n            imagePath = Snow;\n          } else if (res.data.weather[0].main === \"Thunderstorm\") {\n            imagePath = Storm;\n          } else {\n            imagePath = Cloudy;\n          }\n        } else {\n          // Tagsüber, behalte den Hintergrund und Bilder bei oder ändere sie entsprechend\n          document.querySelector(\".weather\").classList.remove(\"night\");\n          if (res.data.weather[0].main === \"Clouds\") {\n            imagePath = Cloud;\n          } else if (res.data.weather[0].main === \"Clear\") {\n            imagePath = Clear;\n          } else if (res.data.weather[0].main === \"Rain\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Drizzle\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Mist\") {\n            imagePath = Fog;\n          } else if (res.data.weather[0].main === \"Snow\") {\n            imagePath = Snow;\n          } else if (res.data.weather[0].main === \"Thunderstorm\") {\n            imagePath = Storm;\n          } else {\n            imagePath = Cloudy;\n          }\n        }\n\n        setData({\n          ...data, // kopiere vorhandene daten und aktualisiere\n          celsius: res.data.main.temp,\n          name: res.data.name,\n          humidity: res.data.main.humidity,\n          speed: res.data.wind.speed,\n          image: imagePath,\n          feel: res.data.main.feels_like,\n          sunrise: res.data.sys.sunrise,\n          sunset: res.data.sys.sunset,\n          // description: res.data.wheater[0].description,\n        });\n        setError(\"\");\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          setError(\"Invalid City Name\");\n        } else {\n          setError(\"\");\n        }\n        console.log(err);\n      });\n  }\n\n  const handleClick = () => {\n    if (name !== \"\") {\n      fetchData(name);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"current_lo\"></div>\n      <div className=\"weather\">\n        <div className=\"search\">\n          <input\n            id=\"input\"\n            type=\"text\"\n            placeholder=\"Enter City Name\"\n            // update die stadt im name / setname usestate\n            onChange={(e) => setName(e.target.value)}\n          />\n          <button onClick={handleClick}>\n            <i className=\"fa-solid fa-magnifying-glass\"></i>\n          </button>\n        </div>\n        <div className=\"winfo\">\n          <div className=\"error\">\n            <p>{error}</p>\n          </div>\n          <img src={data.image} alt=\"cloud\" />\n          <h1>{Math.round(data.celsius)}°C</h1>\n          <h2>{data.name}</h2>\n          <div className=\"details\">\n            <div className=\"col\">\n              <div>\n                <img src={Humidity} alt=\"humidity\" />\n              </div>\n              <div>\n                <p>{Math.round(data.humidity)}%</p>\n                <p>Humidity</p>\n              </div>\n            </div>\n            <div className=\"col\">\n              <div>\n                <img src={Wind} alt=\"wind\" />\n              </div>\n              <div>\n                <p>{Math.round(data.speed)}km/h</p>\n                <p>Wind</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"copyright-mobil\">\n          <a\n            href=\"https://www.flaticon.com/free-icons/weather\"\n            title=\"weather icons\"\n          >\n            Weather icons created by iconixar - Flaticon\n          </a>\n        </div>\n      </div>\n      <div className=\"copyright\">\n        <a\n          href=\"https://www.flaticon.com/free-icons/weather\"\n          title=\"weather icons\"\n        >\n          Weather icons created by iconixar - Flaticon\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}