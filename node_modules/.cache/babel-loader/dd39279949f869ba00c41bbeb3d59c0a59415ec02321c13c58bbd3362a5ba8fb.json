{"ast":null,"code":"import\"../style.css\";import Cloud from\"./assets/cloud.png\";import Clear from\"./assets/sun.png\";import Rain from\"./assets/rainy-day.png\";import Storm from\"./assets/storm.png\";import Fog from\"./assets/fog.png\";import Snow from\"./assets/snowy.png\";import Humidity from\"./assets/weather.png\";import Wind from\"./assets/wind.png\";import Stars from\"./assets/moon.png\";import Cloudy from\"./assets/cloudy.png\";import Feel from\"./assets/thermometer.png\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";// Definition der Home-Komponente\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Home(){// Zugriff auf die API-Schlüssel aus den Umgebungsvariablen\nconst{REACT_APP_API_KEY}=process.env;// Zustände für die Wetterdaten, die Eingabestadt und Fehlermeldungen\nconst[data,setData]=useState({celsius:10,name:\"Suche Stadt...\",humidity:10,speed:2,image:Cloud,feel:10,sunrise:0,sunset:0,description:\"\"});const[name,setName]=useState(\"\");const[error,setError]=useState(\"\");// Zustand, um zu überprüfen, ob es Nacht ist\nconst[isNight,setIsNight]=useState(false);// Zustand, um zu überprüfen, ob bereits eine Stadt abgerufen wurde\nconst[cityFetched,setCityFetched]=useState(false);// Effekt, um die Geolokalisierung auszuführen, wenn keine Stadt abgerufen wurde\nuseEffect(()=>{if(!cityFetched&&name===\"\"){navigator.geolocation.getCurrentPosition(zeigePosition);}},[name,cityFetched]);// // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n// useEffect(() => {\n//   navigator.geolocation.getCurrentPosition(zeigePosition);\n//   fetchData(data.name); // Hier rufen wir die API für die Stadt an, die bereits abgerufen wurde\n// }, [isNight]);\n// Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\nuseEffect(()=>{if(cityFetched){fetchData(data.name);// Hier rufen wir die API für die Stadt an, die bereits abgerufen wurde\n}},[isNight]);// Funktion zur Verarbeitung der Geolokalisierungsdaten\nfunction zeigePosition(position){const lat=position.coords.latitude;const lon=position.coords.longitude;const apiURL=\"https://api.openweathermap.org/geo/1.0/reverse?lat=\".concat(lat,\"&lon=\").concat(lon,\"&appid=\").concat(REACT_APP_API_KEY);axios.get(apiURL).then(res=>{const city=res.data[0].name;fetchData(city);setCityFetched(true);}).catch(err=>{if(err.response.status===404){setError(\"Invalid City Name\");}else{setError(\"\");}});}// Funktion zum Abrufen von Wetterdaten basierend auf dem Stadtnamen\nfunction fetchData(cityName){const apiURL=\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(cityName,\"&appid=\").concat(REACT_APP_API_KEY,\"&units=metric&lang=de\");axios.get(apiURL).then(res=>{let imagePath=\"\";// Bestimmung von Tag oder Nacht\nconst sunriseTime=res.data.sys.sunrise;const sunsetTime=res.data.sys.sunset;let currentTime=Math.floor(Date.now()/1000);const night=currentTime>=sunsetTime||currentTime<sunriseTime;setIsNight(night);if(night){document.querySelector(\".weather\").classList.add(\"night\");if(res.data.weather[0].main===\"Clouds\"){imagePath=Cloud;}else if(res.data.weather[0].main===\"Clear\"){imagePath=Stars;}else if(res.data.weather[0].main===\"Rain\"){imagePath=Rain;}else if(res.data.weather[0].main===\"Drizzle\"){imagePath=Rain;}else if(res.data.weather[0].main===\"Mist\"){imagePath=Fog;}else if(res.data.weather[0].main===\"Snow\"){imagePath=Snow;}else if(res.data.weather[0].main===\"Thunderstorm\"){imagePath=Storm;}else{imagePath=Cloudy;}}else{document.querySelector(\".weather\").classList.remove(\"night\");if(res.data.weather[0].main===\"Clouds\"){imagePath=Cloud;}else if(res.data.weather[0].main===\"Clear\"){imagePath=Clear;}else if(res.data.weather[0].main===\"Rain\"){imagePath=Rain;}else if(res.data.weather[0].main===\"Drizzle\"){imagePath=Rain;}else if(res.data.weather[0].main===\"Mist\"){imagePath=Fog;}else if(res.data.weather[0].main===\"Snow\"){imagePath=Snow;}else if(res.data.weather[0].main===\"Thunderstorm\"){imagePath=Storm;}else{imagePath=Cloudy;}}setData({...data,celsius:res.data.main.temp,name:res.data.name,humidity:res.data.main.humidity,speed:res.data.wind.speed,image:imagePath,feel:res.data.main.feels_like,sunrise:res.data.sys.sunrise,sunset:res.data.sys.sunset,description:res.data.weather[0].description});setError(\"\");}).catch(err=>{if(err.response.status===404){setError(\"Invalid City Name\");}else{setError(\"\");}});}// Funktion zum Verarbeiten von Klickereignissen\nconst handleClick=()=>{setCityFetched(false);// Setzen des Zustands, um sicherzustellen, dass die Geolokalisierung erneut durchgeführt wird\nif(name!==\"\"){fetchData(name);}};// Rückgabe der JSX-Struktur der Home-Komponente\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"current_lo\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"night_shift\",className:\"weather\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"input\",type:\"text\",placeholder:\"Enter City Name\",onChange:e=>setName(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClick,children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-magnifying-glass\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"winfo\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:/*#__PURE__*/_jsx(\"p\",{children:error})}),/*#__PURE__*/_jsx(\"img\",{src:data.image,alt:\"cloud\"}),/*#__PURE__*/_jsxs(\"h1\",{children:[Math.round(data.celsius),\"\\xB0C\"]}),/*#__PURE__*/_jsx(\"h2\",{children:data.name}),/*#__PURE__*/_jsx(\"p\",{className:\"description\",children:data.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:Feel,alt:\"humidity\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(data.feel),\"\\xB0C\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Gef\\xFChlt wie\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:Wind,alt:\"wind\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(data.speed),\"km/h\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Wind\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"details\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:Humidity,alt:\"feels like\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(data.humidity),\"%\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Luftfeuchtigkeit\"})]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"copyright-mobil\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://www.flaticon.com/free-icons/weather\",title:\"weather icons\",children:\"Weather icons created by iconixar - Flaticon\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"copyright\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://www.flaticon.com/free-icons/weather\",title:\"weather icons\",children:\"Weather icons created by iconixar - Flaticon\"})})]});}// Export der Home-Komponente als Standard\nexport default Home;","map":{"version":3,"names":["Cloud","Clear","Rain","Storm","Fog","Snow","Humidity","Wind","Stars","Cloudy","Feel","React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Home","REACT_APP_API_KEY","process","env","data","setData","celsius","name","humidity","speed","image","feel","sunrise","sunset","description","setName","error","setError","isNight","setIsNight","cityFetched","setCityFetched","navigator","geolocation","getCurrentPosition","zeigePosition","fetchData","position","lat","coords","latitude","lon","longitude","apiURL","concat","get","then","res","city","catch","err","response","status","cityName","imagePath","sunriseTime","sys","sunsetTime","currentTime","Math","floor","Date","now","night","document","querySelector","classList","add","weather","main","remove","temp","wind","feels_like","handleClick","className","children","id","type","placeholder","onChange","e","target","value","onClick","src","alt","round","href","title"],"sources":["/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Home.js"],"sourcesContent":["import \"../style.css\";\nimport Cloud from \"./assets/cloud.png\";\nimport Clear from \"./assets/sun.png\";\nimport Rain from \"./assets/rainy-day.png\";\nimport Storm from \"./assets/storm.png\";\nimport Fog from \"./assets/fog.png\";\nimport Snow from \"./assets/snowy.png\";\nimport Humidity from \"./assets/weather.png\";\nimport Wind from \"./assets/wind.png\";\nimport Stars from \"./assets/moon.png\";\nimport Cloudy from \"./assets/cloudy.png\";\nimport Feel from \"./assets/thermometer.png\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Definition der Home-Komponente\nfunction Home() {\n  // Zugriff auf die API-Schlüssel aus den Umgebungsvariablen\n  const { REACT_APP_API_KEY } = process.env;\n\n  // Zustände für die Wetterdaten, die Eingabestadt und Fehlermeldungen\n  const [data, setData] = useState({\n    celsius: 10,\n    name: \"Suche Stadt...\",\n    humidity: 10,\n    speed: 2,\n    image: Cloud,\n    feel: 10,\n    sunrise: 0,\n    sunset: 0,\n    description: \"\",\n  });\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // Zustand, um zu überprüfen, ob es Nacht ist\n  const [isNight, setIsNight] = useState(false);\n  // Zustand, um zu überprüfen, ob bereits eine Stadt abgerufen wurde\n  const [cityFetched, setCityFetched] = useState(false);\n\n  // Effekt, um die Geolokalisierung auszuführen, wenn keine Stadt abgerufen wurde\n  useEffect(() => {\n    if (!cityFetched && name === \"\") {\n      navigator.geolocation.getCurrentPosition(zeigePosition);\n    }\n  }, [name, cityFetched]);\n\n  // // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n  // useEffect(() => {\n  //   navigator.geolocation.getCurrentPosition(zeigePosition);\n  //   fetchData(data.name); // Hier rufen wir die API für die Stadt an, die bereits abgerufen wurde\n  // }, [isNight]);\n\n  // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n  useEffect(() => {\n    if (cityFetched) {\n      fetchData(data.name); // Hier rufen wir die API für die Stadt an, die bereits abgerufen wurde\n    }\n  }, [isNight]);\n\n  // Funktion zur Verarbeitung der Geolokalisierungsdaten\n  function zeigePosition(position) {\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n\n    const apiURL = `https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&appid=${REACT_APP_API_KEY}`;\n\n    axios\n      .get(apiURL)\n      .then((res) => {\n        const city = res.data[0].name;\n        fetchData(city);\n        setCityFetched(true);\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          setError(\"Invalid City Name\");\n        } else {\n          setError(\"\");\n        }\n      });\n  }\n\n  // Funktion zum Abrufen von Wetterdaten basierend auf dem Stadtnamen\n  function fetchData(cityName) {\n    const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n\n    axios\n      .get(apiURL)\n      .then((res) => {\n        let imagePath = \"\";\n\n        // Bestimmung von Tag oder Nacht\n\n        const sunriseTime = res.data.sys.sunrise;\n        const sunsetTime = res.data.sys.sunset;\n        let currentTime = Math.floor(Date.now() / 1000);\n        const night = currentTime >= sunsetTime || currentTime < sunriseTime;\n        setIsNight(night);\n\n        if (night) {\n          document.querySelector(\".weather\").classList.add(\"night\");\n          if (res.data.weather[0].main === \"Clouds\") {\n            imagePath = Cloud;\n          } else if (res.data.weather[0].main === \"Clear\") {\n            imagePath = Stars;\n          } else if (res.data.weather[0].main === \"Rain\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Drizzle\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Mist\") {\n            imagePath = Fog;\n          } else if (res.data.weather[0].main === \"Snow\") {\n            imagePath = Snow;\n          } else if (res.data.weather[0].main === \"Thunderstorm\") {\n            imagePath = Storm;\n          } else {\n            imagePath = Cloudy;\n          }\n        } else {\n          document.querySelector(\".weather\").classList.remove(\"night\");\n          if (res.data.weather[0].main === \"Clouds\") {\n            imagePath = Cloud;\n          } else if (res.data.weather[0].main === \"Clear\") {\n            imagePath = Clear;\n          } else if (res.data.weather[0].main === \"Rain\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Drizzle\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Mist\") {\n            imagePath = Fog;\n          } else if (res.data.weather[0].main === \"Snow\") {\n            imagePath = Snow;\n          } else if (res.data.weather[0].main === \"Thunderstorm\") {\n            imagePath = Storm;\n          } else {\n            imagePath = Cloudy;\n          }\n        }\n\n        setData({\n          ...data,\n          celsius: res.data.main.temp,\n          name: res.data.name,\n          humidity: res.data.main.humidity,\n          speed: res.data.wind.speed,\n          image: imagePath,\n          feel: res.data.main.feels_like,\n          sunrise: res.data.sys.sunrise,\n          sunset: res.data.sys.sunset,\n          description: res.data.weather[0].description,\n        });\n        setError(\"\");\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          setError(\"Invalid City Name\");\n        } else {\n          setError(\"\");\n        }\n      });\n  }\n\n  // Funktion zum Verarbeiten von Klickereignissen\n  const handleClick = () => {\n    setCityFetched(false); // Setzen des Zustands, um sicherzustellen, dass die Geolokalisierung erneut durchgeführt wird\n    if (name !== \"\") {\n      fetchData(name);\n    }\n  };\n\n  // Rückgabe der JSX-Struktur der Home-Komponente\n  return (\n    <div className=\"container\">\n      <div className=\"current_lo\"></div>\n      <div id=\"night_shift\" className=\"weather\">\n        <div className=\"search\">\n          <input\n            id=\"input\"\n            type=\"text\"\n            placeholder=\"Enter City Name\"\n            onChange={(e) => setName(e.target.value)}\n          />\n          <button onClick={handleClick}>\n            <i className=\"fa-solid fa-magnifying-glass\"></i>\n          </button>\n        </div>\n        <div className=\"winfo\">\n          <div className=\"error\">\n            <p>{error}</p>\n          </div>\n          <img src={data.image} alt=\"cloud\" />\n          <h1>{Math.round(data.celsius)}°C</h1>\n          <h2>{data.name}</h2>\n          <p className=\"description\">{data.description}</p>\n          <div className=\"details\">\n            <div className=\"col\">\n              <div>\n                <img src={Feel} alt=\"humidity\" />\n              </div>\n              <div>\n                <p>{Math.round(data.feel)}°C</p>\n                <p>Gefühlt wie</p>\n              </div>\n            </div>\n            <div className=\"col\">\n              <div>\n                <img src={Wind} alt=\"wind\" />\n              </div>\n              <div>\n                <p>{Math.round(data.speed)}km/h</p>\n                <p>Wind</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"details\">\n            <div className=\"col\">\n              <div>\n                <img src={Humidity} alt=\"feels like\" />\n              </div>\n              <div>\n                <p>{Math.round(data.humidity)}%</p>\n                <p>Luftfeuchtigkeit</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"copyright-mobil\">\n          <a\n            href=\"https://www.flaticon.com/free-icons/weather\"\n            title=\"weather icons\"\n          >\n            Weather icons created by iconixar - Flaticon\n          </a>\n        </div>\n      </div>\n      <div className=\"copyright\">\n        <a\n          href=\"https://www.flaticon.com/free-icons/weather\"\n          title=\"weather icons\"\n        >\n          Weather icons created by iconixar - Flaticon\n        </a>\n      </div>\n    </div>\n  );\n}\n\n// Export der Home-Komponente als Standard\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}