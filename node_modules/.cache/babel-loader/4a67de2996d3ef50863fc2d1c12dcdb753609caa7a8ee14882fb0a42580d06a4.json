{"ast":null,"code":"var _jsxFileName = \"/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Home.js\",\n  _s = $RefreshSig$();\nimport \"../style.css\";\nimport Cloud from \"./assets/cloud.png\";\nimport Clear from \"./assets/sun.png\";\nimport Rain from \"./assets/rainy-day.png\";\nimport Storm from \"./assets/storm.png\";\nimport Fog from \"./assets/fog.png\";\nimport Snow from \"./assets/snowy.png\";\nimport Humidity from \"./assets/weather.png\";\nimport Wind from \"./assets/wind.png\";\nimport Stars from \"./assets/moon.png\";\nimport Cloudy from \"./assets/cloudy.png\";\nimport Feel from \"./assets/thermometer.png\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Definition der Home-Komponente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  // Zugriff auf die API-Schlüssel aus den Umgebungsvariablen\n  const {\n    REACT_APP_API_KEY\n  } = process.env;\n\n  // Zustände für die Wetterdaten, die Eingabestadt und Fehlermeldungen\n  const [data, setData] = useState({\n    celsius: 10,\n    name: \"Suche Stadt...\",\n    humidity: 10,\n    speed: 2,\n    image: Cloud,\n    feel: 10,\n    sunrise: 0,\n    sunset: 0,\n    description: \"\"\n  });\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // Zustand, um zu überprüfen, ob es Nacht ist\n  const [isNight, setIsNight] = useState(false);\n  // Zustand, um zu überprüfen, ob bereits eine Stadt abgerufen wurde\n  const [cityFetched, setCityFetched] = useState(false);\n\n  // Funktion zur Bestimmung von Tag oder Nacht\n  function dayOrNight(sunset) {\n    let currentTime = Math.floor(Date.now() / 1000);\n    setIsNight(currentTime >= sunset);\n  }\n\n  // Effekt, um die Geolokalisierung auszuführen, wenn keine Stadt abgerufen wurde\n  useEffect(() => {\n    if (!cityFetched && name === \"\") {\n      navigator.geolocation.getCurrentPosition(zeigePosition);\n    }\n  }, [name, cityFetched]);\n\n  // // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n  // useEffect(() => {\n  //   navigator.geolocation.getCurrentPosition(zeigePosition);\n  //   fetchData(data.name); // Hier rufen wir die API für die Stadt an, die bereits abgerufen wurde\n  // }, [isNight]);\n\n  // // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n  // useEffect(() => {\n  //   if (cityFetched) {\n  //     fetchData(data.name); // Hier rufen wir die API für die Stadt an, die bereits abgerufen wurde\n  //   }\n  // }, [isNight]);\n\n  // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n  useEffect(() => {\n    if (data.sunset !== 0) {\n      dayOrNight(data.sunset);\n    }\n  }, [data.sunset]);\n\n  // Funktion zur Verarbeitung der Geolokalisierungsdaten\n  function zeigePosition(position) {\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n    const apiURL = `https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&appid=${REACT_APP_API_KEY}`;\n    axios.get(apiURL).then(res => {\n      const city = res.data[0].name;\n      fetchData(city);\n      setCityFetched(true);\n    }).catch(err => {\n      if (err.response.status === 404) {\n        setError(\"Invalid City Name\");\n      } else {\n        setError(\"\");\n      }\n    });\n  }\n\n  // Funktion zum Abrufen von Wetterdaten basierend auf dem Stadtnamen\n  function fetchData(cityName) {\n    const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n    axios.get(apiURL).then(res => {\n      let imagePath = \"\";\n\n      // // Funktion zur Bestimmung von Tag oder Nacht\n      // function dayOrNight() {\n      //   let sunset = res.data.sys.sunset;\n      //   let currentTime = Math.floor(Date.now() / 1000);\n      //   setIsNight(currentTime >= sunset);\n      // }\n\n      //dayOrNight();\n\n      if (isNight) {\n        document.querySelector(\".weather\").classList.add(\"night\");\n        if (res.data.weather[0].main === \"Clouds\") {\n          imagePath = Cloud;\n        } else if (res.data.weather[0].main === \"Clear\") {\n          imagePath = Stars;\n        } else if (res.data.weather[0].main === \"Rain\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Drizzle\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Mist\") {\n          imagePath = Fog;\n        } else if (res.data.weather[0].main === \"Snow\") {\n          imagePath = Snow;\n        } else if (res.data.weather[0].main === \"Thunderstorm\") {\n          imagePath = Storm;\n        } else {\n          imagePath = Cloudy;\n        }\n      } else {\n        document.querySelector(\".weather\").classList.remove(\"night\");\n        if (res.data.weather[0].main === \"Clouds\") {\n          imagePath = Cloud;\n        } else if (res.data.weather[0].main === \"Clear\") {\n          imagePath = Clear;\n        } else if (res.data.weather[0].main === \"Rain\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Drizzle\") {\n          imagePath = Rain;\n        } else if (res.data.weather[0].main === \"Mist\") {\n          imagePath = Fog;\n        } else if (res.data.weather[0].main === \"Snow\") {\n          imagePath = Snow;\n        } else if (res.data.weather[0].main === \"Thunderstorm\") {\n          imagePath = Storm;\n        } else {\n          imagePath = Cloudy;\n        }\n      }\n      setData({\n        ...data,\n        celsius: res.data.main.temp,\n        name: res.data.name,\n        humidity: res.data.main.humidity,\n        speed: res.data.wind.speed,\n        image: imagePath,\n        feel: res.data.main.feels_like,\n        sunrise: res.data.sys.sunrise,\n        sunset: res.data.sys.sunset,\n        description: res.data.weather[0].description\n      });\n      setError(\"\");\n    }).catch(err => {\n      if (err.response.status === 404) {\n        setError(\"Invalid City Name\");\n      } else {\n        setError(\"\");\n      }\n    });\n  }\n\n  // Funktion zum Verarbeiten von Klickereignissen\n  const handleClick = () => {\n    setCityFetched(false); // Setzen des Zustands, um sicherzustellen, dass die Geolokalisierung erneut durchgeführt wird\n    if (name !== \"\") {\n      fetchData(name);\n    }\n  };\n\n  // Rückgabe der JSX-Struktur der Home-Komponente\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current_lo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"night_shift\",\n      className: \"weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input\",\n          type: \"text\",\n          placeholder: \"Enter City Name\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-magnifying-glass\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: data.image,\n          alt: \"cloud\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [Math.round(data.celsius), \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: data.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Feel,\n                alt: \"humidity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [Math.round(data.feel), \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Gef\\xFChlt wie\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Wind,\n                alt: \"wind\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [Math.round(data.speed), \"km/h\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Wind\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Humidity,\n                alt: \"feels like\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [Math.round(data.humidity), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Luftfeuchtigkeit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"copyright-mobil\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://www.flaticon.com/free-icons/weather\",\n          title: \"weather icons\",\n          children: \"Weather icons created by iconixar - Flaticon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"copyright\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.flaticon.com/free-icons/weather\",\n        title: \"weather icons\",\n        children: \"Weather icons created by iconixar - Flaticon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n\n// Export der Home-Komponente als Standard\n_s(Home, \"w+9mt1GLm+trhFaY1zMMYZBVuEo=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Cloud","Clear","Rain","Storm","Fog","Snow","Humidity","Wind","Stars","Cloudy","Feel","React","useState","useEffect","axios","jsxDEV","_jsxDEV","Home","_s","REACT_APP_API_KEY","process","env","data","setData","celsius","name","humidity","speed","image","feel","sunrise","sunset","description","setName","error","setError","isNight","setIsNight","cityFetched","setCityFetched","dayOrNight","currentTime","Math","floor","Date","now","navigator","geolocation","getCurrentPosition","zeigePosition","position","lat","coords","latitude","lon","longitude","apiURL","get","then","res","city","fetchData","catch","err","response","status","cityName","imagePath","document","querySelector","classList","add","weather","main","remove","temp","wind","feels_like","sys","handleClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","onChange","e","target","value","onClick","src","alt","round","href","title","_c","$RefreshReg$"],"sources":["/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Home.js"],"sourcesContent":["import \"../style.css\";\nimport Cloud from \"./assets/cloud.png\";\nimport Clear from \"./assets/sun.png\";\nimport Rain from \"./assets/rainy-day.png\";\nimport Storm from \"./assets/storm.png\";\nimport Fog from \"./assets/fog.png\";\nimport Snow from \"./assets/snowy.png\";\nimport Humidity from \"./assets/weather.png\";\nimport Wind from \"./assets/wind.png\";\nimport Stars from \"./assets/moon.png\";\nimport Cloudy from \"./assets/cloudy.png\";\nimport Feel from \"./assets/thermometer.png\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Definition der Home-Komponente\nfunction Home() {\n  // Zugriff auf die API-Schlüssel aus den Umgebungsvariablen\n  const { REACT_APP_API_KEY } = process.env;\n\n  // Zustände für die Wetterdaten, die Eingabestadt und Fehlermeldungen\n  const [data, setData] = useState({\n    celsius: 10,\n    name: \"Suche Stadt...\",\n    humidity: 10,\n    speed: 2,\n    image: Cloud,\n    feel: 10,\n    sunrise: 0,\n    sunset: 0,\n    description: \"\",\n  });\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  // Zustand, um zu überprüfen, ob es Nacht ist\n  const [isNight, setIsNight] = useState(false);\n  // Zustand, um zu überprüfen, ob bereits eine Stadt abgerufen wurde\n  const [cityFetched, setCityFetched] = useState(false);\n\n  // Funktion zur Bestimmung von Tag oder Nacht\n  function dayOrNight(sunset) {\n    let currentTime = Math.floor(Date.now() / 1000);\n    setIsNight(currentTime >= sunset);\n  }\n\n  // Effekt, um die Geolokalisierung auszuführen, wenn keine Stadt abgerufen wurde\n  useEffect(() => {\n    if (!cityFetched && name === \"\") {\n      navigator.geolocation.getCurrentPosition(zeigePosition);\n    }\n  }, [name, cityFetched]);\n\n  // // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n  // useEffect(() => {\n  //   navigator.geolocation.getCurrentPosition(zeigePosition);\n  //   fetchData(data.name); // Hier rufen wir die API für die Stadt an, die bereits abgerufen wurde\n  // }, [isNight]);\n\n  // // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n  // useEffect(() => {\n  //   if (cityFetched) {\n  //     fetchData(data.name); // Hier rufen wir die API für die Stadt an, die bereits abgerufen wurde\n  //   }\n  // }, [isNight]);\n\n  // Effekt, um die Geolokalisierung basierend auf isNight zu aktualisieren\n  useEffect(() => {\n    if (data.sunset !== 0) {\n      dayOrNight(data.sunset);\n    }\n  }, [data.sunset]);\n\n  // Funktion zur Verarbeitung der Geolokalisierungsdaten\n  function zeigePosition(position) {\n    const lat = position.coords.latitude;\n    const lon = position.coords.longitude;\n\n    const apiURL = `https://api.openweathermap.org/geo/1.0/reverse?lat=${lat}&lon=${lon}&appid=${REACT_APP_API_KEY}`;\n\n    axios\n      .get(apiURL)\n      .then((res) => {\n        const city = res.data[0].name;\n        fetchData(city);\n        setCityFetched(true);\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          setError(\"Invalid City Name\");\n        } else {\n          setError(\"\");\n        }\n      });\n  }\n\n  // Funktion zum Abrufen von Wetterdaten basierend auf dem Stadtnamen\n  function fetchData(cityName) {\n    const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n\n    axios\n      .get(apiURL)\n      .then((res) => {\n        let imagePath = \"\";\n\n        // // Funktion zur Bestimmung von Tag oder Nacht\n        // function dayOrNight() {\n        //   let sunset = res.data.sys.sunset;\n        //   let currentTime = Math.floor(Date.now() / 1000);\n        //   setIsNight(currentTime >= sunset);\n        // }\n\n        //dayOrNight();\n\n        if (isNight) {\n          document.querySelector(\".weather\").classList.add(\"night\");\n          if (res.data.weather[0].main === \"Clouds\") {\n            imagePath = Cloud;\n          } else if (res.data.weather[0].main === \"Clear\") {\n            imagePath = Stars;\n          } else if (res.data.weather[0].main === \"Rain\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Drizzle\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Mist\") {\n            imagePath = Fog;\n          } else if (res.data.weather[0].main === \"Snow\") {\n            imagePath = Snow;\n          } else if (res.data.weather[0].main === \"Thunderstorm\") {\n            imagePath = Storm;\n          } else {\n            imagePath = Cloudy;\n          }\n        } else {\n          document.querySelector(\".weather\").classList.remove(\"night\");\n          if (res.data.weather[0].main === \"Clouds\") {\n            imagePath = Cloud;\n          } else if (res.data.weather[0].main === \"Clear\") {\n            imagePath = Clear;\n          } else if (res.data.weather[0].main === \"Rain\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Drizzle\") {\n            imagePath = Rain;\n          } else if (res.data.weather[0].main === \"Mist\") {\n            imagePath = Fog;\n          } else if (res.data.weather[0].main === \"Snow\") {\n            imagePath = Snow;\n          } else if (res.data.weather[0].main === \"Thunderstorm\") {\n            imagePath = Storm;\n          } else {\n            imagePath = Cloudy;\n          }\n        }\n\n        setData({\n          ...data,\n          celsius: res.data.main.temp,\n          name: res.data.name,\n          humidity: res.data.main.humidity,\n          speed: res.data.wind.speed,\n          image: imagePath,\n          feel: res.data.main.feels_like,\n          sunrise: res.data.sys.sunrise,\n          sunset: res.data.sys.sunset,\n          description: res.data.weather[0].description,\n        });\n        setError(\"\");\n      })\n      .catch((err) => {\n        if (err.response.status === 404) {\n          setError(\"Invalid City Name\");\n        } else {\n          setError(\"\");\n        }\n      });\n  }\n\n  // Funktion zum Verarbeiten von Klickereignissen\n  const handleClick = () => {\n    setCityFetched(false); // Setzen des Zustands, um sicherzustellen, dass die Geolokalisierung erneut durchgeführt wird\n    if (name !== \"\") {\n      fetchData(name);\n    }\n  };\n\n  // Rückgabe der JSX-Struktur der Home-Komponente\n  return (\n    <div className=\"container\">\n      <div className=\"current_lo\"></div>\n      <div id=\"night_shift\" className=\"weather\">\n        <div className=\"search\">\n          <input\n            id=\"input\"\n            type=\"text\"\n            placeholder=\"Enter City Name\"\n            onChange={(e) => setName(e.target.value)}\n          />\n          <button onClick={handleClick}>\n            <i className=\"fa-solid fa-magnifying-glass\"></i>\n          </button>\n        </div>\n        <div className=\"winfo\">\n          <div className=\"error\">\n            <p>{error}</p>\n          </div>\n          <img src={data.image} alt=\"cloud\" />\n          <h1>{Math.round(data.celsius)}°C</h1>\n          <h2>{data.name}</h2>\n          <p className=\"description\">{data.description}</p>\n          <div className=\"details\">\n            <div className=\"col\">\n              <div>\n                <img src={Feel} alt=\"humidity\" />\n              </div>\n              <div>\n                <p>{Math.round(data.feel)}°C</p>\n                <p>Gefühlt wie</p>\n              </div>\n            </div>\n            <div className=\"col\">\n              <div>\n                <img src={Wind} alt=\"wind\" />\n              </div>\n              <div>\n                <p>{Math.round(data.speed)}km/h</p>\n                <p>Wind</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"details\">\n            <div className=\"col\">\n              <div>\n                <img src={Humidity} alt=\"feels like\" />\n              </div>\n              <div>\n                <p>{Math.round(data.humidity)}%</p>\n                <p>Luftfeuchtigkeit</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"copyright-mobil\">\n          <a\n            href=\"https://www.flaticon.com/free-icons/weather\"\n            title=\"weather icons\"\n          >\n            Weather icons created by iconixar - Flaticon\n          </a>\n        </div>\n      </div>\n      <div className=\"copyright\">\n        <a\n          href=\"https://www.flaticon.com/free-icons/weather\"\n          title=\"weather icons\"\n        >\n          Weather icons created by iconixar - Flaticon\n        </a>\n      </div>\n    </div>\n  );\n}\n\n// Export der Home-Komponente als Standard\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}