{"ast":null,"code":"var _jsxFileName = \"/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Spinner.js\",\n  _s = $RefreshSig$();\nimport { useState, CSSProperties } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst override = {\n  display: \"block\",\n  margin: \"0 auto\",\n  borderColor: \"red\"\n};\nfunction Spinner() {\n  _s();\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#ffffff\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sweet-loading\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setLoading(!loading),\n      children: \"Toggle Loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: color,\n      onChange: input => setColor(input.target.value),\n      placeholder: \"Color of the loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClipLoader, {\n      color: color,\n      loading: loading,\n      cssOverride: override,\n      size: 150,\n      \"aria-label\": \"Loading Spinner\",\n      \"data-testid\": \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Spinner, \"seaEM2XOjsxyl7PK3XOA1GtO+dM=\");\n_c = Spinner;\nexport default Spinner;\nvar _c;\n$RefreshReg$(_c, \"Spinner\");","map":{"version":3,"names":["useState","CSSProperties","ClipLoader","jsxDEV","_jsxDEV","override","display","margin","borderColor","Spinner","_s","loading","setLoading","color","setColor","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","input","target","placeholder","cssOverride","size","_c","$RefreshReg$"],"sources":["/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Spinner.js"],"sourcesContent":["import { useState, CSSProperties } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst override: CSSProperties = {\n  display: \"block\",\n  margin: \"0 auto\",\n  borderColor: \"red\",\n};\n\nfunction Spinner() {\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\"#ffffff\");\n\n  return (\n    <div className=\"sweet-loading\">\n      <button onClick={() => setLoading(!loading)}>Toggle Loader</button>\n      <input\n        value={color}\n        onChange={(input) => setColor(input.target.value)}\n        placeholder=\"Color of the loader\"\n      />\n\n      <ClipLoader\n        color={color}\n        loading={loading}\n        cssOverride={override}\n        size={150}\n        aria-label=\"Loading Spinner\"\n        data-testid=\"loader\"\n      />\n    </div>\n  );\n}\n\nexport default Spinner;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,aAAa,QAAQ,OAAO;AAC/C,OAAOC,UAAU,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAuB,GAAG;EAC9BC,OAAO,EAAE,OAAO;EAChBC,MAAM,EAAE,QAAQ;EAChBC,WAAW,EAAE;AACf,CAAC;AAED,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,IAAI,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1C,IAAI,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,SAAS,CAAC;EAE3C,oBACEI,OAAA;IAAKW,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BZ,OAAA;MAAQa,OAAO,EAAEA,CAAA,KAAML,UAAU,CAAC,CAACD,OAAO,CAAE;MAAAK,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnEjB,OAAA;MACEkB,KAAK,EAAET,KAAM;MACbU,QAAQ,EAAGC,KAAK,IAAKV,QAAQ,CAACU,KAAK,CAACC,MAAM,CAACH,KAAK,CAAE;MAClDI,WAAW,EAAC;IAAqB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAEFjB,OAAA,CAACF,UAAU;MACTW,KAAK,EAAEA,KAAM;MACbF,OAAO,EAAEA,OAAQ;MACjBgB,WAAW,EAAEtB,QAAS;MACtBuB,IAAI,EAAE,GAAI;MACV,cAAW,iBAAiB;MAC5B,eAAY;IAAQ;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACX,EAAA,CAvBQD,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AAyBhB,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}