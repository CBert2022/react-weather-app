{"ast":null,"code":"var _jsxFileName = \"/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Details.js\",\n  _s = $RefreshSig$();\n// Details.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Funktion zur Ermittlung des Wochentags\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getWeekday(dt_txt) {\n  const date = new Date(dt_txt);\n  const weekdays = [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"];\n  return weekdays[date.getDay()];\n}\nfunction Details({\n  cityName,\n  minTemp,\n  maxTemp,\n  image\n}) {\n  _s();\n  // Zugriff auf die API-Schlüssel aus den Umgebungsvariablen\n  const {\n    REACT_APP_API_KEY\n  } = process.env;\n\n  // Zustände für die Wetterdaten, die Eingabestadt und Fehlermeldungen\n  const [data, setData] = useState({\n    celsius: 10,\n    name: \"Suche Stadt...\",\n    humidity: \"\",\n    speed: \"\",\n    image: \"Cloud\",\n    feel: \"\",\n    description: \"\",\n    min_temp: \"\",\n    max_temp: \"\",\n    date: \"\",\n    weekday: \"\"\n  });\n\n  //console.log(cityName);\n  const apiURL = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n  axios.get(apiURL).then(res => {\n    console.log(res.data);\n    res.data.list.forEach(element => {\n      const weekday = getWeekday(element.dt_txt);\n      console.log(\"Wochentag:\", weekday);\n      // Hier könntest du weitere Verarbeitungsschritte für die Wetterdaten durchführen\n      const groupedForecasts = {}; // Initialisiere das Objekt für gruppierte Vorhersagen\n\n      for (const forecast of res.data.list) {\n        const date = forecast.dt_txt.split(\" \")[0]; // Nur das Datum extrahieren\n\n        // Überprüfen, ob es bereits einen Eintrag für dieses Datum gibt, falls nicht, erstelle einen neuen\n        if (!groupedForecasts[date]) {\n          groupedForecasts[date] = [];\n        }\n\n        // Füge die aktuelle Vorhersage zur entsprechenden Gruppe hinzu\n        groupedForecasts[date].push(forecast);\n      }\n      console.log(groupedForecasts);\n    });\n  }).catch(err => {\n    console.error(\"Fehler beim Abrufen der Wetterdaten:\", err);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_temp_infos\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"5-Tage-Vorhersage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container_forecast\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Heute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"forecast_icon\",\n            src: image,\n            alt: \"wetter icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"minTemp\",\n            children: [Math.round(minTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(maxTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"devider_forcast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Heute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"forecast_icon\",\n            src: image,\n            alt: \"wetter icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"minTemp\",\n            children: [Math.round(minTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(maxTemp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tab\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Details, \"srgygkBk/KRxNPM0Fa3kcA+OU1o=\");\n_c = Details;\nexport default Details;\nvar _c;\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","getWeekday","dt_txt","date","Date","weekdays","getDay","Details","cityName","minTemp","maxTemp","image","_s","REACT_APP_API_KEY","process","env","data","setData","celsius","name","humidity","speed","feel","description","min_temp","max_temp","weekday","apiURL","get","then","res","console","log","list","forEach","element","groupedForecasts","forecast","split","push","catch","err","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","Math","round","id","_c","$RefreshReg$"],"sources":["/Users/carobert/Documents/Web_Development/react-weather-app/weather-app/src/Components/Details.js"],"sourcesContent":["// Details.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n// Funktion zur Ermittlung des Wochentags\nfunction getWeekday(dt_txt) {\n  const date = new Date(dt_txt);\n  const weekdays = [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"];\n  return weekdays[date.getDay()];\n}\n\nfunction Details({ cityName, minTemp, maxTemp, image }) {\n  // Zugriff auf die API-Schlüssel aus den Umgebungsvariablen\n  const { REACT_APP_API_KEY } = process.env;\n\n  // Zustände für die Wetterdaten, die Eingabestadt und Fehlermeldungen\n  const [data, setData] = useState({\n    celsius: 10,\n    name: \"Suche Stadt...\",\n    humidity: \"\",\n    speed: \"\",\n    image: \"Cloud\",\n    feel: \"\",\n    description: \"\",\n    min_temp: \"\",\n    max_temp: \"\",\n    date: \"\",\n    weekday: \"\",\n  });\n\n  //console.log(cityName);\n  const apiURL = `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${REACT_APP_API_KEY}&units=metric&lang=de`;\n\n  axios\n    .get(apiURL)\n    .then((res) => {\n      console.log(res.data);\n      res.data.list.forEach((element) => {\n        const weekday = getWeekday(element.dt_txt);\n        console.log(\"Wochentag:\", weekday);\n        // Hier könntest du weitere Verarbeitungsschritte für die Wetterdaten durchführen\n        const groupedForecasts = {}; // Initialisiere das Objekt für gruppierte Vorhersagen\n\n        for (const forecast of res.data.list) {\n          const date = forecast.dt_txt.split(\" \")[0]; // Nur das Datum extrahieren\n\n          // Überprüfen, ob es bereits einen Eintrag für dieses Datum gibt, falls nicht, erstelle einen neuen\n          if (!groupedForecasts[date]) {\n            groupedForecasts[date] = [];\n          }\n\n          // Füge die aktuelle Vorhersage zur entsprechenden Gruppe hinzu\n          groupedForecasts[date].push(forecast);\n        }\n        console.log(groupedForecasts);\n      });\n    })\n    .catch((err) => {\n      console.error(\"Fehler beim Abrufen der Wetterdaten:\", err);\n    });\n\n  return (\n    <>\n      <div className=\"container_temp_infos\">\n        <h3>5-Tage-Vorhersage</h3>\n        <div className=\"container_forecast\">\n          <div className=\"forecast_row\">\n            <p>Heute</p>\n            <img className=\"forecast_icon\" src={image} alt=\"wetter icon\" />\n            <p className=\"minTemp\">{Math.round(minTemp)}°C</p>\n            <p>{Math.round(maxTemp)}°C</p>\n          </div>\n          <div className=\"devider_forcast\"></div>\n          <div className=\"forecast_row\">\n            <p>Heute</p>\n            <img className=\"forecast_icon\" src={image} alt=\"wetter icon\" />\n            <p className=\"minTemp\">{Math.round(minTemp)}°C</p>\n            <p>{Math.round(maxTemp)}°C</p>\n          </div>\n        </div>\n        <div id=\"tab\"></div>\n      </div>\n    </>\n  );\n}\n\nexport default Details;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}